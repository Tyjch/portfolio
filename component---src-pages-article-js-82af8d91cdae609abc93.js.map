{"version":3,"sources":["webpack:///./node_modules/prismjs/plugins/toolbar/prism-toolbar.js","webpack:///./node_modules/core-js/modules/es.string.trim-start.js","webpack:///./node_modules/prismjs/plugins/show-language/prism-show-language.js","webpack:///./src/styles/article.module.css","webpack:///./node_modules/typed.js/lib/typed.js","webpack:///./node_modules/prismjs/components/prism-python.js","webpack:///./content/articles/solitaire-ai.yaml","webpack:///./node_modules/prismjs/components/prism-javascript.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./node_modules/diff-match-patch/index.js","webpack:///./node_modules/prismjs/components/prism-css.js","webpack:///./node_modules/prismjs/components/prism-markup.js","webpack:///./node_modules/prismjs/components/prism-core.js","webpack:///./node_modules/prismjs/plugins/line-numbers/prism-line-numbers.js","webpack:///./node_modules/prismjs/components/prism-clike.js","webpack:///./node_modules/core-js/internals/string-trim-forced.js","webpack:///./src/components/code.js","webpack:///./src/components/article.js","webpack:///./src/pages/article.js"],"names":["self","Prism","document","callbacks","map","noop","plugins","toolbar","registerButton","key","opts","callback","env","element","onClick","createElement","type","addEventListener","call","this","url","href","className","classList","add","textContent","text","console","warn","push","hook","pre","parentNode","test","nodeName","contains","wrapper","insertBefore","appendChild","elementCallbacks","order","getAttribute","trim","length","split","parentElement","getOrder","forEach","item","hasAttribute","template","querySelector","e","content","hooks","$","$trimStart","start","FORCED","forcedStringTrimMethod","trimStart","target","proto","forced","trimLeft","Languages","id","language","substring","toUpperCase","replace","module","exports","factory","modules","installedModules","__webpack_require__","moduleId","loaded","m","c","p","Object","defineProperty","value","_createClass","defineProperties","props","i","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","prototype","_initializerJs","_htmlParserJs","Typed","elementId","options","instance","TypeError","_classCallCheck","initializer","load","begin","pause","status","stop","typingComplete","toggleBlinking","onStop","arrayPos","typewrite","curString","curStrPos","backspace","onStart","reset","onDestroy","restart","arguments","undefined","clearInterval","timeout","replaceText","cursor","removeChild","strPos","curLoop","insertCursor","onReset","_this","onBegin","shuffleStringsIfNeeded","bindInputFocusEvents","bindFocusEvents","setTimeout","currentElContent","strings","sequence","startDelay","_this2","fadeOut","el","fadeOutClass","remove","humanize","humanizer","typeSpeed","numChars","htmlParser","typeHtmlChars","pauseTime","substr","charAt","skip","exec","parseInt","temporaryPause","onTypingPaused","stringBeforeSkip","stringSkipped","stringAfterSkip","doneTyping","keepTyping","onTypingResumed","setPauseStatus","preStringTyped","nextString","_this3","onStringTyped","complete","loop","loopCount","backDelay","_this4","initFadeOut","backSpeed","backSpaceHtmlChars","curStringAtPosition","smartBackspace","stopNum","onLastStringBackspaced","onComplete","isTyping","isBlinking","cursorBlinking","speed","Math","round","random","shuffle","sort","_this5","fadeOutDelay","str","attr","setAttribute","isInput","contentType","innerHTML","_this6","showCursor","cursorChar","nextSibling","obj","_extends","assign","source","hasOwnProperty","_defaultsJs","_defaultsJs2","__esModule","Initializer","tagName","toLowerCase","elContent","isPaused","s","stringsElement","style","display","Array","slice","apply","children","stringsLength","stringEl","getCurrentElContent","autoInsertCss","appendAnimationCss","css","innerCss","body","defaults","Infinity","HTMLParser","curChar","endTag","languages","python","pattern","lookbehind","greedy","inside","alias","rest","py","javascript","extend","clike","regex","markup","tag","addInlined","js","requireObjectCoercible","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","String","end","diff_match_patch","Diff_Timeout","Diff_EditCost","Match_Threshold","Match_Distance","Patch_DeleteThreshold","Patch_Margin","Match_MaxBits","Diff","op","diff_main","text1","text2","opt_checklines","opt_deadline","Number","MAX_VALUE","Date","getTime","deadline","Error","checklines","commonlength","diff_commonPrefix","commonprefix","diff_commonSuffix","commonsuffix","diffs","diff_compute_","unshift","diff_cleanupMerge","longtext","shorttext","indexOf","hm","diff_halfMatch_","text1_a","text1_b","text2_a","text2_b","mid_common","diffs_a","diffs_b","concat","diff_lineMode_","diff_bisect_","a","diff_linesToChars_","chars1","chars2","linearray","lineArray","diff_charsToLines_","diff_cleanupSemantic","pointer","count_delete","count_insert","text_delete","text_insert","splice","subDiff","j","pop","text1_length","text2_length","max_d","ceil","v_offset","v_length","v1","v2","x","delta","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","k2_offset","x2","diff_bisectSplit_","k2","y2","y","text1a","text2a","text1b","text2b","diffsb","lineHash","diff_linesToCharsMunge_","chars","lineStart","lineEnd","lineArrayLength","line","fromCharCode","maxLines","charCodeAt","join","pointermin","pointermax","min","pointermid","pointerstart","floor","pointerend","diff_commonOverlap_","text_length","best","found","dmp","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","best_common","prefixLength","suffixLength","hm1","hm2","changes","equalities","equalitiesLength","lastEquality","length_insertions1","length_deletions1","length_insertions2","length_deletions2","max","diff_cleanupSemanticLossless","deletion","insertion","overlap_length1","overlap_length2","diff_cleanupSemanticScore_","one","two","char1","char2","nonAlphaNumeric1","match","nonAlphaNumericRegex_","nonAlphaNumeric2","whitespace1","whitespaceRegex_","whitespace2","lineBreak1","linebreakRegex_","lineBreak2","blankLine1","blanklineEndRegex_","blankLine2","blanklineStartRegex_","equality1","edit","equality2","commonOffset","commonString","bestEquality1","bestEdit","bestEquality2","bestScore","score","diff_cleanupEfficiency","pre_ins","pre_del","post_ins","post_del","diff_xIndex","loc","last_chars1","last_chars2","diff_prettyHtml","html","pattern_amp","pattern_lt","pattern_gt","pattern_para","diff_text1","diff_text2","diff_levenshtein","levenshtein","insertions","deletions","data","diff_toDelta","encodeURI","diff_fromDelta","diffsLength","tokens","param","decodeURI","ex","n","isNaN","match_main","match_bitap_","match_alphabet_","match_bitapScore_","accuracy","proximity","abs","score_threshold","best_loc","lastIndexOf","bin_min","bin_mid","matchmask","last_rd","bin_max","finish","rd","charMatch","patch_addContext_","patch","start2","length1","padding","prefix","suffix","start1","length2","patch_make","opt_b","opt_c","patches","patch_obj","patchDiffLength","char_count1","char_count2","prepatch_text","postpatch_text","diff_type","diff_text","patch_deepCopy","patchesCopy","patchCopy","patch_apply","nullPadding","patch_addPadding","patch_splitMax","results","start_loc","expected_loc","end_loc","index2","index1","mod","paddingLength","extraLength","patch_size","bigpatch","precontext","empty","shift","postcontext","patch_toText","patch_fromText","textline","textPointer","patchHeader","sign","toString","attributes","lang","includedCdataInside","def","mathml","svg","xml","ssml","atom","rss","_self","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","Token","isArray","o","objId","clone","deepClone","visited","v","getLanguage","currentScript","err","src","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","redef","before","insert","root","grammar","ret","token","newToken","old","DFS","property","propertyType","highlightAll","async","highlightAllUnder","container","selector","run","elements","querySelectorAll","highlightElement","parent","code","insertHighlightedCode","highlightedCode","Worker","worker","filename","onmessage","evt","postMessage","JSON","stringify","immediateClose","highlight","tokenize","tokenList","LinkedList","addAfter","head","matchGrammar","startNode","startPos","rematch","patterns","cause","patternObj","lookbehindLength","global","flags","currentNode","next","pos","tail","reach","removeCount","prev","lastIndex","from","index","to","k","matchStr","after","removeFrom","removeRange","wrapped","list","array","node","toArray","all","name","matchedStr","newNode","count","classes","aliases","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","window","requestAnimationFrame","WorkerGlobalScope","NEW_LINE_EXP","config","lineNumbers","getLine","number","lineNumberRows","lineNumberStart","lineNumberEnd","lineIndex","resize","resizeElements","assumeViewportIndependence","getStyles","getComputedStyle","currentStyle","lastWidth","innerWidth","lineNumbersWrapper","linesNum","lines","counterReset","filter","whiteSpace","infos","codeElement","lineNumberSizer","codeLines","oneLinerHeight","getBoundingClientRect","height","lineHeights","sizer","Boolean","info","childIndex","lineNumber","fails","whitespaces","METHOD_NAME","diff","DiffMatchPatch","Code","offset","spacing","useState","setPrev","curr","setCurr","differences","typerOptions","delay","useEffect","color","Typer","operation","codeRef","useRef","getStrings","trimmedCode","repeat","React","current","typed","destroy","ref","CodeContainer","setIndex","margin","Header","styles","header","size","Section","title","sectionTitle","section","Article","article","main","ArticlePage","ArticleData"],"mappings":"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","file":"component---src-pages-article-js-82af8d91cdae609abc93.js","sourcesContent":["(function () {\n  if (typeof self === 'undefined' || !self.Prism || !self.document) {\n    return;\n  }\n\n  var callbacks = [];\n  var map = {};\n\n  var noop = function noop() {};\n\n  Prism.plugins.toolbar = {};\n  /**\n   * @typedef ButtonOptions\n   * @property {string} text The text displayed.\n   * @property {string} [url] The URL of the link which will be created.\n   * @property {Function} [onClick] The event listener for the `click` event of the created button.\n   * @property {string} [className] The class attribute to include with element.\n   */\n\n  /**\n   * Register a button callback with the toolbar.\n   *\n   * @param {string} key\n   * @param {ButtonOptions|Function} opts\n   */\n\n  var registerButton = Prism.plugins.toolbar.registerButton = function (key, opts) {\n    var callback;\n\n    if (typeof opts === 'function') {\n      callback = opts;\n    } else {\n      callback = function callback(env) {\n        var element;\n\n        if (typeof opts.onClick === 'function') {\n          element = document.createElement('button');\n          element.type = 'button';\n          element.addEventListener('click', function () {\n            opts.onClick.call(this, env);\n          });\n        } else if (typeof opts.url === 'string') {\n          element = document.createElement('a');\n          element.href = opts.url;\n        } else {\n          element = document.createElement('span');\n        }\n\n        if (opts.className) {\n          element.classList.add(opts.className);\n        }\n\n        element.textContent = opts.text;\n        return element;\n      };\n    }\n\n    if (key in map) {\n      console.warn('There is a button with the key \"' + key + '\" registered already.');\n      return;\n    }\n\n    callbacks.push(map[key] = callback);\n  };\n  /**\n   * Returns the callback order of the given element.\n   *\n   * @param {HTMLElement} element\n   * @returns {string[] | undefined}\n   */\n\n\n  function getOrder(element) {\n    while (element) {\n      var order = element.getAttribute('data-toolbar-order');\n\n      if (order != null) {\n        order = order.trim();\n\n        if (order.length) {\n          return order.split(/\\s*,\\s*/g);\n        } else {\n          return [];\n        }\n      }\n\n      element = element.parentElement;\n    }\n  }\n  /**\n   * Post-highlight Prism hook callback.\n   *\n   * @param env\n   */\n\n\n  var hook = Prism.plugins.toolbar.hook = function (env) {\n    // Check if inline or actual code block (credit to line-numbers plugin)\n    var pre = env.element.parentNode;\n\n    if (!pre || !/pre/i.test(pre.nodeName)) {\n      return;\n    } // Autoloader rehighlights, so only do this once.\n\n\n    if (pre.parentNode.classList.contains('code-toolbar')) {\n      return;\n    } // Create wrapper for <pre> to prevent scrolling toolbar with content\n\n\n    var wrapper = document.createElement('div');\n    wrapper.classList.add('code-toolbar');\n    pre.parentNode.insertBefore(wrapper, pre);\n    wrapper.appendChild(pre); // Setup the toolbar\n\n    var toolbar = document.createElement('div');\n    toolbar.classList.add('toolbar'); // order callbacks\n\n    var elementCallbacks = callbacks;\n    var order = getOrder(env.element);\n\n    if (order) {\n      elementCallbacks = order.map(function (key) {\n        return map[key] || noop;\n      });\n    }\n\n    elementCallbacks.forEach(function (callback) {\n      var element = callback(env);\n\n      if (!element) {\n        return;\n      }\n\n      var item = document.createElement('div');\n      item.classList.add('toolbar-item');\n      item.appendChild(element);\n      toolbar.appendChild(item);\n    }); // Add our toolbar to the currently created wrapper of <pre> tag\n\n    wrapper.appendChild(toolbar);\n  };\n\n  registerButton('label', function (env) {\n    var pre = env.element.parentNode;\n\n    if (!pre || !/pre/i.test(pre.nodeName)) {\n      return;\n    }\n\n    if (!pre.hasAttribute('data-label')) {\n      return;\n    }\n\n    var element, template;\n    var text = pre.getAttribute('data-label');\n\n    try {\n      // Any normal text will blow up this selector.\n      template = document.querySelector('template#' + text);\n    } catch (e) {}\n\n    if (template) {\n      element = template.content;\n    } else {\n      if (pre.hasAttribute('data-url')) {\n        element = document.createElement('a');\n        element.href = pre.getAttribute('data-url');\n      } else {\n        element = document.createElement('span');\n      }\n\n      element.textContent = text;\n    }\n\n    return element;\n  });\n  /**\n   * Register the toolbar with Prism.\n   */\n\n  Prism.hooks.add('complete', hook);\n})();","'use strict';\nvar $ = require('../internals/export');\nvar $trimStart = require('../internals/string-trim').start;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\nvar FORCED = forcedStringTrimMethod('trimStart');\n\nvar trimStart = FORCED ? function trimStart() {\n  return $trimStart(this);\n} : ''.trimStart;\n\n// `String.prototype.{ trimStart, trimLeft }` methods\n// https://github.com/tc39/ecmascript-string-left-right-trim\n$({ target: 'String', proto: true, forced: FORCED }, {\n  trimStart: trimStart,\n  trimLeft: trimStart\n});\n","(function () {\n  if (typeof self === 'undefined' || !self.Prism || !self.document) {\n    return;\n  }\n\n  if (!Prism.plugins.toolbar) {\n    console.warn('Show Languages plugin loaded before Toolbar plugin.');\n    return;\n  } // The languages map is built automatically with gulp\n\n\n  var Languages =\n  /*languages_placeholder[*/\n  {\n    \"none\": \"Plain text\",\n    \"html\": \"HTML\",\n    \"xml\": \"XML\",\n    \"svg\": \"SVG\",\n    \"mathml\": \"MathML\",\n    \"ssml\": \"SSML\",\n    \"rss\": \"RSS\",\n    \"css\": \"CSS\",\n    \"clike\": \"C-like\",\n    \"js\": \"JavaScript\",\n    \"abap\": \"ABAP\",\n    \"abnf\": \"ABNF\",\n    \"al\": \"AL\",\n    \"antlr4\": \"ANTLR4\",\n    \"g4\": \"ANTLR4\",\n    \"apacheconf\": \"Apache Configuration\",\n    \"apl\": \"APL\",\n    \"aql\": \"AQL\",\n    \"arff\": \"ARFF\",\n    \"asciidoc\": \"AsciiDoc\",\n    \"adoc\": \"AsciiDoc\",\n    \"aspnet\": \"ASP.NET (C#)\",\n    \"asm6502\": \"6502 Assembly\",\n    \"autohotkey\": \"AutoHotkey\",\n    \"autoit\": \"AutoIt\",\n    \"basic\": \"BASIC\",\n    \"bbcode\": \"BBcode\",\n    \"bnf\": \"BNF\",\n    \"rbnf\": \"RBNF\",\n    \"bsl\": \"BSL (1C:Enterprise)\",\n    \"oscript\": \"OneScript\",\n    \"csharp\": \"C#\",\n    \"cs\": \"C#\",\n    \"dotnet\": \"C#\",\n    \"cpp\": \"C++\",\n    \"cil\": \"CIL\",\n    \"cmake\": \"CMake\",\n    \"coffee\": \"CoffeeScript\",\n    \"conc\": \"Concurnas\",\n    \"csp\": \"Content-Security-Policy\",\n    \"css-extras\": \"CSS Extras\",\n    \"dax\": \"DAX\",\n    \"django\": \"Django/Jinja2\",\n    \"jinja2\": \"Django/Jinja2\",\n    \"dns-zone-file\": \"DNS zone file\",\n    \"dns-zone\": \"DNS zone file\",\n    \"dockerfile\": \"Docker\",\n    \"ebnf\": \"EBNF\",\n    \"editorconfig\": \"EditorConfig\",\n    \"ejs\": \"EJS\",\n    \"etlua\": \"Embedded Lua templating\",\n    \"erb\": \"ERB\",\n    \"excel-formula\": \"Excel Formula\",\n    \"xlsx\": \"Excel Formula\",\n    \"xls\": \"Excel Formula\",\n    \"fsharp\": \"F#\",\n    \"firestore-security-rules\": \"Firestore security rules\",\n    \"ftl\": \"FreeMarker Template Language\",\n    \"gml\": \"GameMaker Language\",\n    \"gamemakerlanguage\": \"GameMaker Language\",\n    \"gcode\": \"G-code\",\n    \"gdscript\": \"GDScript\",\n    \"gedcom\": \"GEDCOM\",\n    \"glsl\": \"GLSL\",\n    \"graphql\": \"GraphQL\",\n    \"hs\": \"Haskell\",\n    \"hcl\": \"HCL\",\n    \"hlsl\": \"HLSL\",\n    \"http\": \"HTTP\",\n    \"hpkp\": \"HTTP Public-Key-Pins\",\n    \"hsts\": \"HTTP Strict-Transport-Security\",\n    \"ichigojam\": \"IchigoJam\",\n    \"ignore\": \".ignore\",\n    \"gitignore\": \".gitignore\",\n    \"hgignore\": \".hgignore\",\n    \"npmignore\": \".npmignore\",\n    \"inform7\": \"Inform 7\",\n    \"javadoc\": \"JavaDoc\",\n    \"javadoclike\": \"JavaDoc-like\",\n    \"javastacktrace\": \"Java stack trace\",\n    \"jq\": \"JQ\",\n    \"jsdoc\": \"JSDoc\",\n    \"js-extras\": \"JS Extras\",\n    \"json\": \"JSON\",\n    \"webmanifest\": \"Web App Manifest\",\n    \"json5\": \"JSON5\",\n    \"jsonp\": \"JSONP\",\n    \"jsstacktrace\": \"JS stack trace\",\n    \"js-templates\": \"JS Templates\",\n    \"kts\": \"Kotlin Script\",\n    \"kt\": \"Kotlin\",\n    \"latex\": \"LaTeX\",\n    \"tex\": \"TeX\",\n    \"context\": \"ConTeXt\",\n    \"lilypond\": \"LilyPond\",\n    \"ly\": \"LilyPond\",\n    \"emacs\": \"Lisp\",\n    \"elisp\": \"Lisp\",\n    \"emacs-lisp\": \"Lisp\",\n    \"llvm\": \"LLVM IR\",\n    \"lolcode\": \"LOLCODE\",\n    \"md\": \"Markdown\",\n    \"markup-templating\": \"Markup templating\",\n    \"matlab\": \"MATLAB\",\n    \"mel\": \"MEL\",\n    \"mongodb\": \"MongoDB\",\n    \"moon\": \"MoonScript\",\n    \"n1ql\": \"N1QL\",\n    \"n4js\": \"N4JS\",\n    \"n4jsd\": \"N4JS\",\n    \"nand2tetris-hdl\": \"Nand To Tetris HDL\",\n    \"naniscript\": \"Naninovel Script\",\n    \"nani\": \"Naninovel Script\",\n    \"nasm\": \"NASM\",\n    \"neon\": \"NEON\",\n    \"nginx\": \"nginx\",\n    \"nsis\": \"NSIS\",\n    \"objectivec\": \"Objective-C\",\n    \"objc\": \"Objective-C\",\n    \"ocaml\": \"OCaml\",\n    \"opencl\": \"OpenCL\",\n    \"parigp\": \"PARI/GP\",\n    \"objectpascal\": \"Object Pascal\",\n    \"pcaxis\": \"PC-Axis\",\n    \"px\": \"PC-Axis\",\n    \"peoplecode\": \"PeopleCode\",\n    \"pcode\": \"PeopleCode\",\n    \"php\": \"PHP\",\n    \"phpdoc\": \"PHPDoc\",\n    \"php-extras\": \"PHP Extras\",\n    \"plsql\": \"PL/SQL\",\n    \"powerquery\": \"PowerQuery\",\n    \"pq\": \"PowerQuery\",\n    \"mscript\": \"PowerQuery\",\n    \"powershell\": \"PowerShell\",\n    \"properties\": \".properties\",\n    \"protobuf\": \"Protocol Buffers\",\n    \"purebasic\": \"PureBasic\",\n    \"pbfasm\": \"PureBasic\",\n    \"purs\": \"PureScript\",\n    \"py\": \"Python\",\n    \"q\": \"Q (kdb+ database)\",\n    \"qml\": \"QML\",\n    \"rkt\": \"Racket\",\n    \"jsx\": \"React JSX\",\n    \"tsx\": \"React TSX\",\n    \"renpy\": \"Ren'py\",\n    \"rpy\": \"Ren'py\",\n    \"rest\": \"reST (reStructuredText)\",\n    \"robotframework\": \"Robot Framework\",\n    \"robot\": \"Robot Framework\",\n    \"rb\": \"Ruby\",\n    \"sas\": \"SAS\",\n    \"sass\": \"Sass (Sass)\",\n    \"scss\": \"Sass (Scss)\",\n    \"shell-session\": \"Shell session\",\n    \"sh-session\": \"Shell session\",\n    \"shellsession\": \"Shell session\",\n    \"sml\": \"SML\",\n    \"smlnj\": \"SML/NJ\",\n    \"solidity\": \"Solidity (Ethereum)\",\n    \"sol\": \"Solidity (Ethereum)\",\n    \"solution-file\": \"Solution file\",\n    \"sln\": \"Solution file\",\n    \"soy\": \"Soy (Closure Template)\",\n    \"sparql\": \"SPARQL\",\n    \"rq\": \"SPARQL\",\n    \"splunk-spl\": \"Splunk SPL\",\n    \"sqf\": \"SQF: Status Quo Function (Arma 3)\",\n    \"sql\": \"SQL\",\n    \"iecst\": \"Structured Text (IEC 61131-3)\",\n    \"t4-templating\": \"T4 templating\",\n    \"t4-cs\": \"T4 Text Templates (C#)\",\n    \"t4\": \"T4 Text Templates (C#)\",\n    \"t4-vb\": \"T4 Text Templates (VB)\",\n    \"tap\": \"TAP\",\n    \"tt2\": \"Template Toolkit 2\",\n    \"toml\": \"TOML\",\n    \"trig\": \"TriG\",\n    \"ts\": \"TypeScript\",\n    \"tsconfig\": \"TSConfig\",\n    \"uscript\": \"UnrealScript\",\n    \"uc\": \"UnrealScript\",\n    \"vbnet\": \"VB.Net\",\n    \"vhdl\": \"VHDL\",\n    \"vim\": \"vim\",\n    \"visual-basic\": \"Visual Basic\",\n    \"vba\": \"VBA\",\n    \"vb\": \"Visual Basic\",\n    \"wasm\": \"WebAssembly\",\n    \"wiki\": \"Wiki markup\",\n    \"xeoracube\": \"XeoraCube\",\n    \"xml-doc\": \"XML doc (.net)\",\n    \"xojo\": \"Xojo (REALbasic)\",\n    \"xquery\": \"XQuery\",\n    \"yaml\": \"YAML\",\n    \"yml\": \"YAML\",\n    \"yang\": \"YANG\"\n  }\n  /*]*/\n  ;\n  Prism.plugins.toolbar.registerButton('show-language', function (env) {\n    var pre = env.element.parentNode;\n\n    if (!pre || !/pre/i.test(pre.nodeName)) {\n      return;\n    }\n    /**\n     * Tries to guess the name of a language given its id.\n     *\n     * @param {string} id The language id.\n     * @returns {string}\n     */\n\n\n    function guessTitle(id) {\n      if (!id) {\n        return id;\n      }\n\n      return (id.substring(0, 1).toUpperCase() + id.substring(1)).replace(/s(?=cript)/, 'S');\n    }\n\n    var language = pre.getAttribute('data-language') || Languages[env.language] || guessTitle(env.language);\n\n    if (!language) {\n      return;\n    }\n\n    var element = document.createElement('span');\n    element.textContent = language;\n    return element;\n  });\n})();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"article-module--article--3T8aA\",\"main\":\"article-module--main--354fN\",\"body\":\"article-module--body--3gwm6\",\"header\":\"article-module--header--1NbAy\",\"title\":\"article-module--title--2HUF-\",\"section\":\"article-module--section--3mV8Z\",\"sectionTitle\":\"article-module--sectionTitle--ImnZ8\",\"backButton\":\"article-module--backButton--1sy7t\",\"code\":\"article-module--code--2GmXs\",\"codeSample\":\"article-module--codeSample--1zUtz\"};","/*!\n * \n *   typed.js - A JavaScript Typing Animation Library\n *   Author: Matt Boldt <me@mattboldt.com>\n *   Version: v2.0.11\n *   Url: https://github.com/mattboldt/typed.js\n *   License(s): MIT\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"Typed\"] = factory();else root[\"Typed\"] = factory();\n})(this, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId])\n          /******/\n          return installedModules[moduleId].exports;\n        /******/\n\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n        var module = installedModules[moduleId] = {\n          /******/\n          exports: {},\n\n          /******/\n          id: moduleId,\n\n          /******/\n          loaded: false\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.loaded = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(0);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError('Cannot call a class as a function');\n        }\n      }\n\n      var _initializerJs = __webpack_require__(1);\n\n      var _htmlParserJs = __webpack_require__(3);\n      /**\n       * Welcome to Typed.js!\n       * @param {string} elementId HTML element ID _OR_ HTML element\n       * @param {object} options options object\n       * @returns {object} a new Typed object\n       */\n\n\n      var Typed = function () {\n        function Typed(elementId, options) {\n          _classCallCheck(this, Typed); // Initialize it up\n\n\n          _initializerJs.initializer.load(this, options, elementId); // All systems go!\n\n\n          this.begin();\n        }\n        /**\n         * Toggle start() and stop() of the Typed instance\n         * @public\n         */\n\n\n        _createClass(Typed, [{\n          key: 'toggle',\n          value: function toggle() {\n            this.pause.status ? this.start() : this.stop();\n          }\n          /**\n           * Stop typing / backspacing and enable cursor blinking\n           * @public\n           */\n\n        }, {\n          key: 'stop',\n          value: function stop() {\n            if (this.typingComplete) return;\n            if (this.pause.status) return;\n            this.toggleBlinking(true);\n            this.pause.status = true;\n            this.options.onStop(this.arrayPos, this);\n          }\n          /**\n           * Start typing / backspacing after being stopped\n           * @public\n           */\n\n        }, {\n          key: 'start',\n          value: function start() {\n            if (this.typingComplete) return;\n            if (!this.pause.status) return;\n            this.pause.status = false;\n\n            if (this.pause.typewrite) {\n              this.typewrite(this.pause.curString, this.pause.curStrPos);\n            } else {\n              this.backspace(this.pause.curString, this.pause.curStrPos);\n            }\n\n            this.options.onStart(this.arrayPos, this);\n          }\n          /**\n           * Destroy this instance of Typed\n           * @public\n           */\n\n        }, {\n          key: 'destroy',\n          value: function destroy() {\n            this.reset(false);\n            this.options.onDestroy(this);\n          }\n          /**\n           * Reset Typed and optionally restarts\n           * @param {boolean} restart\n           * @public\n           */\n\n        }, {\n          key: 'reset',\n          value: function reset() {\n            var restart = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n            clearInterval(this.timeout);\n            this.replaceText('');\n\n            if (this.cursor && this.cursor.parentNode) {\n              this.cursor.parentNode.removeChild(this.cursor);\n              this.cursor = null;\n            }\n\n            this.strPos = 0;\n            this.arrayPos = 0;\n            this.curLoop = 0;\n\n            if (restart) {\n              this.insertCursor();\n              this.options.onReset(this);\n              this.begin();\n            }\n          }\n          /**\n           * Begins the typing animation\n           * @private\n           */\n\n        }, {\n          key: 'begin',\n          value: function begin() {\n            var _this = this;\n\n            this.options.onBegin(this);\n            this.typingComplete = false;\n            this.shuffleStringsIfNeeded(this);\n            this.insertCursor();\n            if (this.bindInputFocusEvents) this.bindFocusEvents();\n            this.timeout = setTimeout(function () {\n              // Check if there is some text in the element, if yes start by backspacing the default message\n              if (!_this.currentElContent || _this.currentElContent.length === 0) {\n                _this.typewrite(_this.strings[_this.sequence[_this.arrayPos]], _this.strPos);\n              } else {\n                // Start typing\n                _this.backspace(_this.currentElContent, _this.currentElContent.length);\n              }\n            }, this.startDelay);\n          }\n          /**\n           * Called for each character typed\n           * @param {string} curString the current string in the strings array\n           * @param {number} curStrPos the current position in the curString\n           * @private\n           */\n\n        }, {\n          key: 'typewrite',\n          value: function typewrite(curString, curStrPos) {\n            var _this2 = this;\n\n            if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n              this.el.classList.remove(this.fadeOutClass);\n              if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n            }\n\n            var humanize = this.humanizer(this.typeSpeed);\n            var numChars = 1;\n\n            if (this.pause.status === true) {\n              this.setPauseStatus(curString, curStrPos, true);\n              return;\n            } // contain typing function in a timeout humanize'd delay\n\n\n            this.timeout = setTimeout(function () {\n              // skip over any HTML chars\n              curStrPos = _htmlParserJs.htmlParser.typeHtmlChars(curString, curStrPos, _this2);\n              var pauseTime = 0;\n              var substr = curString.substr(curStrPos); // check for an escape character before a pause value\n              // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n              // single ^ are removed from string\n\n              if (substr.charAt(0) === '^') {\n                if (/^\\^\\d+/.test(substr)) {\n                  var skip = 1; // skip at least 1\n\n                  substr = /\\d+/.exec(substr)[0];\n                  skip += substr.length;\n                  pauseTime = parseInt(substr);\n                  _this2.temporaryPause = true;\n\n                  _this2.options.onTypingPaused(_this2.arrayPos, _this2); // strip out the escape character and pause value so they're not printed\n\n\n                  curString = curString.substring(0, curStrPos) + curString.substring(curStrPos + skip);\n\n                  _this2.toggleBlinking(true);\n                }\n              } // check for skip characters formatted as\n              // \"this is a `string to print NOW` ...\"\n\n\n              if (substr.charAt(0) === '`') {\n                while (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\n                  numChars++;\n                  if (curStrPos + numChars > curString.length) break;\n                } // strip out the escape characters and append all the string in between\n\n\n                var stringBeforeSkip = curString.substring(0, curStrPos);\n                var stringSkipped = curString.substring(stringBeforeSkip.length + 1, curStrPos + numChars);\n                var stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n                curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n                numChars--;\n              } // timeout for any pause after a character\n\n\n              _this2.timeout = setTimeout(function () {\n                // Accounts for blinking while paused\n                _this2.toggleBlinking(false); // We're done with this sentence!\n\n\n                if (curStrPos >= curString.length) {\n                  _this2.doneTyping(curString, curStrPos);\n                } else {\n                  _this2.keepTyping(curString, curStrPos, numChars);\n                } // end of character pause\n\n\n                if (_this2.temporaryPause) {\n                  _this2.temporaryPause = false;\n\n                  _this2.options.onTypingResumed(_this2.arrayPos, _this2);\n                }\n              }, pauseTime); // humanized value for typing\n            }, humanize);\n          }\n          /**\n           * Continue to the next string & begin typing\n           * @param {string} curString the current string in the strings array\n           * @param {number} curStrPos the current position in the curString\n           * @private\n           */\n\n        }, {\n          key: 'keepTyping',\n          value: function keepTyping(curString, curStrPos, numChars) {\n            // call before functions if applicable\n            if (curStrPos === 0) {\n              this.toggleBlinking(false);\n              this.options.preStringTyped(this.arrayPos, this);\n            } // start typing each new char into existing string\n            // curString: arg, this.el.html: original text inside element\n\n\n            curStrPos += numChars;\n            var nextString = curString.substr(0, curStrPos);\n            this.replaceText(nextString); // loop the function\n\n            this.typewrite(curString, curStrPos);\n          }\n          /**\n           * We're done typing the current string\n           * @param {string} curString the current string in the strings array\n           * @param {number} curStrPos the current position in the curString\n           * @private\n           */\n\n        }, {\n          key: 'doneTyping',\n          value: function doneTyping(curString, curStrPos) {\n            var _this3 = this; // fires callback function\n\n\n            this.options.onStringTyped(this.arrayPos, this);\n            this.toggleBlinking(true); // is this the final string\n\n            if (this.arrayPos === this.strings.length - 1) {\n              // callback that occurs on the last typed string\n              this.complete(); // quit if we wont loop back\n\n              if (this.loop === false || this.curLoop === this.loopCount) {\n                return;\n              }\n            }\n\n            this.timeout = setTimeout(function () {\n              _this3.backspace(curString, curStrPos);\n            }, this.backDelay);\n          }\n          /**\n           * Backspaces 1 character at a time\n           * @param {string} curString the current string in the strings array\n           * @param {number} curStrPos the current position in the curString\n           * @private\n           */\n\n        }, {\n          key: 'backspace',\n          value: function backspace(curString, curStrPos) {\n            var _this4 = this;\n\n            if (this.pause.status === true) {\n              this.setPauseStatus(curString, curStrPos, true);\n              return;\n            }\n\n            if (this.fadeOut) return this.initFadeOut();\n            this.toggleBlinking(false);\n            var humanize = this.humanizer(this.backSpeed);\n            this.timeout = setTimeout(function () {\n              curStrPos = _htmlParserJs.htmlParser.backSpaceHtmlChars(curString, curStrPos, _this4); // replace text with base text + typed characters\n\n              var curStringAtPosition = curString.substr(0, curStrPos);\n\n              _this4.replaceText(curStringAtPosition); // if smartBack is enabled\n\n\n              if (_this4.smartBackspace) {\n                // the remaining part of the current string is equal of the same part of the new string\n                var nextString = _this4.strings[_this4.arrayPos + 1];\n\n                if (nextString && curStringAtPosition === nextString.substr(0, curStrPos)) {\n                  _this4.stopNum = curStrPos;\n                } else {\n                  _this4.stopNum = 0;\n                }\n              } // if the number (id of character in current string) is\n              // less than the stop number, keep going\n\n\n              if (curStrPos > _this4.stopNum) {\n                // subtract characters one by one\n                curStrPos--; // loop the function\n\n                _this4.backspace(curString, curStrPos);\n              } else if (curStrPos <= _this4.stopNum) {\n                // if the stop number has been reached, increase\n                // array position to next string\n                _this4.arrayPos++; // When looping, begin at the beginning after backspace complete\n\n                if (_this4.arrayPos === _this4.strings.length) {\n                  _this4.arrayPos = 0;\n\n                  _this4.options.onLastStringBackspaced();\n\n                  _this4.shuffleStringsIfNeeded();\n\n                  _this4.begin();\n                } else {\n                  _this4.typewrite(_this4.strings[_this4.sequence[_this4.arrayPos]], curStrPos);\n                }\n              } // humanized value for typing\n\n            }, humanize);\n          }\n          /**\n           * Full animation is complete\n           * @private\n           */\n\n        }, {\n          key: 'complete',\n          value: function complete() {\n            this.options.onComplete(this);\n\n            if (this.loop) {\n              this.curLoop++;\n            } else {\n              this.typingComplete = true;\n            }\n          }\n          /**\n           * Has the typing been stopped\n           * @param {string} curString the current string in the strings array\n           * @param {number} curStrPos the current position in the curString\n           * @param {boolean} isTyping\n           * @private\n           */\n\n        }, {\n          key: 'setPauseStatus',\n          value: function setPauseStatus(curString, curStrPos, isTyping) {\n            this.pause.typewrite = isTyping;\n            this.pause.curString = curString;\n            this.pause.curStrPos = curStrPos;\n          }\n          /**\n           * Toggle the blinking cursor\n           * @param {boolean} isBlinking\n           * @private\n           */\n\n        }, {\n          key: 'toggleBlinking',\n          value: function toggleBlinking(isBlinking) {\n            if (!this.cursor) return; // if in paused state, don't toggle blinking a 2nd time\n\n            if (this.pause.status) return;\n            if (this.cursorBlinking === isBlinking) return;\n            this.cursorBlinking = isBlinking;\n\n            if (isBlinking) {\n              this.cursor.classList.add('typed-cursor--blink');\n            } else {\n              this.cursor.classList.remove('typed-cursor--blink');\n            }\n          }\n          /**\n           * Speed in MS to type\n           * @param {number} speed\n           * @private\n           */\n\n        }, {\n          key: 'humanizer',\n          value: function humanizer(speed) {\n            return Math.round(Math.random() * speed / 2) + speed;\n          }\n          /**\n           * Shuffle the sequence of the strings array\n           * @private\n           */\n\n        }, {\n          key: 'shuffleStringsIfNeeded',\n          value: function shuffleStringsIfNeeded() {\n            if (!this.shuffle) return;\n            this.sequence = this.sequence.sort(function () {\n              return Math.random() - 0.5;\n            });\n          }\n          /**\n           * Adds a CSS class to fade out current string\n           * @private\n           */\n\n        }, {\n          key: 'initFadeOut',\n          value: function initFadeOut() {\n            var _this5 = this;\n\n            this.el.className += ' ' + this.fadeOutClass;\n            if (this.cursor) this.cursor.className += ' ' + this.fadeOutClass;\n            return setTimeout(function () {\n              _this5.arrayPos++;\n\n              _this5.replaceText(''); // Resets current string if end of loop reached\n\n\n              if (_this5.strings.length > _this5.arrayPos) {\n                _this5.typewrite(_this5.strings[_this5.sequence[_this5.arrayPos]], 0);\n              } else {\n                _this5.typewrite(_this5.strings[0], 0);\n\n                _this5.arrayPos = 0;\n              }\n            }, this.fadeOutDelay);\n          }\n          /**\n           * Replaces current text in the HTML element\n           * depending on element type\n           * @param {string} str\n           * @private\n           */\n\n        }, {\n          key: 'replaceText',\n          value: function replaceText(str) {\n            if (this.attr) {\n              this.el.setAttribute(this.attr, str);\n            } else {\n              if (this.isInput) {\n                this.el.value = str;\n              } else if (this.contentType === 'html') {\n                this.el.innerHTML = str;\n              } else {\n                this.el.textContent = str;\n              }\n            }\n          }\n          /**\n           * If using input elements, bind focus in order to\n           * start and stop the animation\n           * @private\n           */\n\n        }, {\n          key: 'bindFocusEvents',\n          value: function bindFocusEvents() {\n            var _this6 = this;\n\n            if (!this.isInput) return;\n            this.el.addEventListener('focus', function (e) {\n              _this6.stop();\n            });\n            this.el.addEventListener('blur', function (e) {\n              if (_this6.el.value && _this6.el.value.length !== 0) {\n                return;\n              }\n\n              _this6.start();\n            });\n          }\n          /**\n           * On init, insert the cursor element\n           * @private\n           */\n\n        }, {\n          key: 'insertCursor',\n          value: function insertCursor() {\n            if (!this.showCursor) return;\n            if (this.cursor) return;\n            this.cursor = document.createElement('span');\n            this.cursor.className = 'typed-cursor';\n            this.cursor.innerHTML = this.cursorChar;\n            this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n          }\n        }]);\n\n        return Typed;\n      }();\n\n      exports['default'] = Typed;\n      module.exports = exports['default'];\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          'default': obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError('Cannot call a class as a function');\n        }\n      }\n\n      var _defaultsJs = __webpack_require__(2);\n\n      var _defaultsJs2 = _interopRequireDefault(_defaultsJs);\n      /**\n       * Initialize the Typed object\n       */\n\n\n      var Initializer = function () {\n        function Initializer() {\n          _classCallCheck(this, Initializer);\n        }\n\n        _createClass(Initializer, [{\n          key: 'load',\n\n          /**\n           * Load up defaults & options on the Typed instance\n           * @param {Typed} self instance of Typed\n           * @param {object} options options object\n           * @param {string} elementId HTML element ID _OR_ instance of HTML element\n           * @private\n           */\n          value: function load(self, options, elementId) {\n            // chosen element to manipulate text\n            if (typeof elementId === 'string') {\n              self.el = document.querySelector(elementId);\n            } else {\n              self.el = elementId;\n            }\n\n            self.options = _extends({}, _defaultsJs2['default'], options); // attribute to type into\n\n            self.isInput = self.el.tagName.toLowerCase() === 'input';\n            self.attr = self.options.attr;\n            self.bindInputFocusEvents = self.options.bindInputFocusEvents; // show cursor\n\n            self.showCursor = self.isInput ? false : self.options.showCursor; // custom cursor\n\n            self.cursorChar = self.options.cursorChar; // Is the cursor blinking\n\n            self.cursorBlinking = true; // text content of element\n\n            self.elContent = self.attr ? self.el.getAttribute(self.attr) : self.el.textContent; // html or plain text\n\n            self.contentType = self.options.contentType; // typing speed\n\n            self.typeSpeed = self.options.typeSpeed; // add a delay before typing starts\n\n            self.startDelay = self.options.startDelay; // backspacing speed\n\n            self.backSpeed = self.options.backSpeed; // only backspace what doesn't match the previous string\n\n            self.smartBackspace = self.options.smartBackspace; // amount of time to wait before backspacing\n\n            self.backDelay = self.options.backDelay; // Fade out instead of backspace\n\n            self.fadeOut = self.options.fadeOut;\n            self.fadeOutClass = self.options.fadeOutClass;\n            self.fadeOutDelay = self.options.fadeOutDelay; // variable to check whether typing is currently paused\n\n            self.isPaused = false; // input strings of text\n\n            self.strings = self.options.strings.map(function (s) {\n              return s.trim();\n            }); // div containing strings\n\n            if (typeof self.options.stringsElement === 'string') {\n              self.stringsElement = document.querySelector(self.options.stringsElement);\n            } else {\n              self.stringsElement = self.options.stringsElement;\n            }\n\n            if (self.stringsElement) {\n              self.strings = [];\n              self.stringsElement.style.display = 'none';\n              var strings = Array.prototype.slice.apply(self.stringsElement.children);\n              var stringsLength = strings.length;\n\n              if (stringsLength) {\n                for (var i = 0; i < stringsLength; i += 1) {\n                  var stringEl = strings[i];\n                  self.strings.push(stringEl.innerHTML.trim());\n                }\n              }\n            } // character number position of current string\n\n\n            self.strPos = 0; // current array position\n\n            self.arrayPos = 0; // index of string to stop backspacing on\n\n            self.stopNum = 0; // Looping logic\n\n            self.loop = self.options.loop;\n            self.loopCount = self.options.loopCount;\n            self.curLoop = 0; // shuffle the strings\n\n            self.shuffle = self.options.shuffle; // the order of strings\n\n            self.sequence = [];\n            self.pause = {\n              status: false,\n              typewrite: true,\n              curString: '',\n              curStrPos: 0\n            }; // When the typing is complete (when not looped)\n\n            self.typingComplete = false; // Set the order in which the strings are typed\n\n            for (var i in self.strings) {\n              self.sequence[i] = i;\n            } // If there is some text in the element\n\n\n            self.currentElContent = this.getCurrentElContent(self);\n            self.autoInsertCss = self.options.autoInsertCss;\n            this.appendAnimationCss(self);\n          }\n        }, {\n          key: 'getCurrentElContent',\n          value: function getCurrentElContent(self) {\n            var elContent = '';\n\n            if (self.attr) {\n              elContent = self.el.getAttribute(self.attr);\n            } else if (self.isInput) {\n              elContent = self.el.value;\n            } else if (self.contentType === 'html') {\n              elContent = self.el.innerHTML;\n            } else {\n              elContent = self.el.textContent;\n            }\n\n            return elContent;\n          }\n        }, {\n          key: 'appendAnimationCss',\n          value: function appendAnimationCss(self) {\n            var cssDataName = 'data-typed-js-css';\n\n            if (!self.autoInsertCss) {\n              return;\n            }\n\n            if (!self.showCursor && !self.fadeOut) {\n              return;\n            }\n\n            if (document.querySelector('[' + cssDataName + ']')) {\n              return;\n            }\n\n            var css = document.createElement('style');\n            css.type = 'text/css';\n            css.setAttribute(cssDataName, true);\n            var innerCss = '';\n\n            if (self.showCursor) {\n              innerCss += '\\n        .typed-cursor{\\n          opacity: 1;\\n        }\\n        .typed-cursor.typed-cursor--blink{\\n          animation: typedjsBlink 0.7s infinite;\\n          -webkit-animation: typedjsBlink 0.7s infinite;\\n                  animation: typedjsBlink 0.7s infinite;\\n        }\\n        @keyframes typedjsBlink{\\n          50% { opacity: 0.0; }\\n        }\\n        @-webkit-keyframes typedjsBlink{\\n          0% { opacity: 1; }\\n          50% { opacity: 0.0; }\\n          100% { opacity: 1; }\\n        }\\n      ';\n            }\n\n            if (self.fadeOut) {\n              innerCss += '\\n        .typed-fade-out{\\n          opacity: 0;\\n          transition: opacity .25s;\\n        }\\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\\n          -webkit-animation: 0;\\n          animation: 0;\\n        }\\n      ';\n            }\n\n            if (css.length === 0) {\n              return;\n            }\n\n            css.innerHTML = innerCss;\n            document.body.appendChild(css);\n          }\n        }]);\n\n        return Initializer;\n      }();\n\n      exports['default'] = Initializer;\n      var initializer = new Initializer();\n      exports.initializer = initializer;\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * Defaults & options\n       * @returns {object} Typed defaults & options\n       * @public\n       */\n      'use strict';\n\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n      var defaults = {\n        /**\n         * @property {array} strings strings to be typed\n         * @property {string} stringsElement ID of element containing string children\n         */\n        strings: ['These are the default values...', 'You know what you should do?', 'Use your own!', 'Have a great day!'],\n        stringsElement: null,\n\n        /**\n         * @property {number} typeSpeed type speed in milliseconds\n         */\n        typeSpeed: 0,\n\n        /**\n         * @property {number} startDelay time before typing starts in milliseconds\n         */\n        startDelay: 0,\n\n        /**\n         * @property {number} backSpeed backspacing speed in milliseconds\n         */\n        backSpeed: 0,\n\n        /**\n         * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n         */\n        smartBackspace: true,\n\n        /**\n         * @property {boolean} shuffle shuffle the strings\n         */\n        shuffle: false,\n\n        /**\n         * @property {number} backDelay time before backspacing in milliseconds\n         */\n        backDelay: 700,\n\n        /**\n         * @property {boolean} fadeOut Fade out instead of backspace\n         * @property {string} fadeOutClass css class for fade animation\n         * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n         */\n        fadeOut: false,\n        fadeOutClass: 'typed-fade-out',\n        fadeOutDelay: 500,\n\n        /**\n         * @property {boolean} loop loop strings\n         * @property {number} loopCount amount of loops\n         */\n        loop: false,\n        loopCount: Infinity,\n\n        /**\n         * @property {boolean} showCursor show cursor\n         * @property {string} cursorChar character for cursor\n         * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n         */\n        showCursor: true,\n        cursorChar: '|',\n        autoInsertCss: true,\n\n        /**\n         * @property {string} attr attribute for typing\n         * Ex: input placeholder, value, or just HTML text\n         */\n        attr: null,\n\n        /**\n         * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n         */\n        bindInputFocusEvents: false,\n\n        /**\n         * @property {string} contentType 'html' or 'null' for plaintext\n         */\n        contentType: 'html',\n\n        /**\n         * Before it begins typing\n         * @param {Typed} self\n         */\n        onBegin: function onBegin(self) {},\n\n        /**\n         * All typing is complete\n         * @param {Typed} self\n         */\n        onComplete: function onComplete(self) {},\n\n        /**\n         * Before each string is typed\n         * @param {number} arrayPos\n         * @param {Typed} self\n         */\n        preStringTyped: function preStringTyped(arrayPos, self) {},\n\n        /**\n         * After each string is typed\n         * @param {number} arrayPos\n         * @param {Typed} self\n         */\n        onStringTyped: function onStringTyped(arrayPos, self) {},\n\n        /**\n         * During looping, after last string is typed\n         * @param {Typed} self\n         */\n        onLastStringBackspaced: function onLastStringBackspaced(self) {},\n\n        /**\n         * Typing has been stopped\n         * @param {number} arrayPos\n         * @param {Typed} self\n         */\n        onTypingPaused: function onTypingPaused(arrayPos, self) {},\n\n        /**\n         * Typing has been started after being stopped\n         * @param {number} arrayPos\n         * @param {Typed} self\n         */\n        onTypingResumed: function onTypingResumed(arrayPos, self) {},\n\n        /**\n         * After reset\n         * @param {Typed} self\n         */\n        onReset: function onReset(self) {},\n\n        /**\n         * After stop\n         * @param {number} arrayPos\n         * @param {Typed} self\n         */\n        onStop: function onStop(arrayPos, self) {},\n\n        /**\n         * After start\n         * @param {number} arrayPos\n         * @param {Typed} self\n         */\n        onStart: function onStart(arrayPos, self) {},\n\n        /**\n         * After destroy\n         * @param {Typed} self\n         */\n        onDestroy: function onDestroy(self) {}\n      };\n      exports['default'] = defaults;\n      module.exports = exports['default'];\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * TODO: These methods can probably be combined somehow\n       * Parse HTML tags & HTML Characters\n       */\n      'use strict';\n\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError('Cannot call a class as a function');\n        }\n      }\n\n      var HTMLParser = function () {\n        function HTMLParser() {\n          _classCallCheck(this, HTMLParser);\n        }\n\n        _createClass(HTMLParser, [{\n          key: 'typeHtmlChars',\n\n          /**\n           * Type HTML tags & HTML Characters\n           * @param {string} curString Current string\n           * @param {number} curStrPos Position in current string\n           * @param {Typed} self instance of Typed\n           * @returns {number} a new string position\n           * @private\n           */\n          value: function typeHtmlChars(curString, curStrPos, self) {\n            if (self.contentType !== 'html') return curStrPos;\n            var curChar = curString.substr(curStrPos).charAt(0);\n\n            if (curChar === '<' || curChar === '&') {\n              var endTag = '';\n\n              if (curChar === '<') {\n                endTag = '>';\n              } else {\n                endTag = ';';\n              }\n\n              while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n                curStrPos++;\n\n                if (curStrPos + 1 > curString.length) {\n                  break;\n                }\n              }\n\n              curStrPos++;\n            }\n\n            return curStrPos;\n          }\n          /**\n           * Backspace HTML tags and HTML Characters\n           * @param {string} curString Current string\n           * @param {number} curStrPos Position in current string\n           * @param {Typed} self instance of Typed\n           * @returns {number} a new string position\n           * @private\n           */\n\n        }, {\n          key: 'backSpaceHtmlChars',\n          value: function backSpaceHtmlChars(curString, curStrPos, self) {\n            if (self.contentType !== 'html') return curStrPos;\n            var curChar = curString.substr(curStrPos).charAt(0);\n\n            if (curChar === '>' || curChar === ';') {\n              var endTag = '';\n\n              if (curChar === '>') {\n                endTag = '<';\n              } else {\n                endTag = '&';\n              }\n\n              while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\n                curStrPos--;\n\n                if (curStrPos < 0) {\n                  break;\n                }\n              }\n\n              curStrPos--;\n            }\n\n            return curStrPos;\n          }\n        }]);\n\n        return HTMLParser;\n      }();\n\n      exports['default'] = HTMLParser;\n      var htmlParser = new HTMLParser();\n      exports.htmlParser = htmlParser;\n      /***/\n    }\n    /******/\n    ])\n  );\n});\n\n;","Prism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^\\s*)@\\w+(?:\\.\\w+)*/im,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:True|False|None)\\b/,\n  'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n  'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\nPrism.languages.py = Prism.languages.python;","module.exports = [{\"title\":\"Solitaire AI\",\"sections\":[{\"subtitle\":\"Introduction\"}]}]","Prism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: Prism.languages.regex\n      },\n      'regex-flags': /[a-z]+$/,\n      'regex-delimiter': /^\\/|\\/$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;","// a string of all valid unicode whitespaces\n// eslint-disable-next-line max-len\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","/**\n * Diff Match and Patch\n * Copyright 2018 The diff-match-patch Authors.\n * https://github.com/google/diff-match-patch\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a patch.\n * Applies the patch onto another text, allowing for errors.\n * @author fraser@google.com (Neil Fraser)\n */\n\n/**\n * Class containing the diff, match and patch methods.\n * @constructor\n */\nvar diff_match_patch = function diff_match_patch() {\n  // Defaults.\n  // Redefine these in your program to override the defaults.\n  // Number of seconds to map a diff before giving up (0 for infinity).\n  this.Diff_Timeout = 1.0; // Cost of an empty edit operation in terms of edit characters.\n\n  this.Diff_EditCost = 4; // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n\n  this.Match_Threshold = 0.5; // How far to search for a match (0 = exact location, 1000+ = broad match).\n  // A match this many characters away from the expected location will add\n  // 1.0 to the score (0.0 is a perfect match).\n\n  this.Match_Distance = 1000; // When deleting a large block of text (over ~64 characters), how close do\n  // the contents have to be to match the expected contents. (0.0 = perfection,\n  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\n  // end points of a delete need to match.\n\n  this.Patch_DeleteThreshold = 0.5; // Chunk size for context length.\n\n  this.Patch_Margin = 4; // The number of bits in an int.\n\n  this.Match_MaxBits = 32;\n}; //  DIFF FUNCTIONS\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\n\n\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n/**\n * Class representing one diff tuple.\n * ~Attempts to look like a two-element array (which is what this used to be).~\n * Constructor returns an actual two-element array, to allow destructing @JackuB\n * See https://github.com/JackuB/diff-match-patch/issues/14 for details\n * @param {number} op Operation, one of: DIFF_DELETE, DIFF_INSERT, DIFF_EQUAL.\n * @param {string} text Text to be deleted, inserted, or retained.\n * @constructor\n */\n\ndiff_match_patch.Diff = function (op, text) {\n  return [op, text];\n};\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean=} opt_checklines Optional speedup flag. If present and false,\n *     then don't run a line-level diff first to identify the changed areas.\n *     Defaults to true, which does a faster, slightly less optimal diff.\n * @param {number=} opt_deadline Optional time when the diff should be complete\n *     by.  Used internally for recursive calls.  Users should set DiffTimeout\n *     instead.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n */\n\n\ndiff_match_patch.prototype.diff_main = function (text1, text2, opt_checklines, opt_deadline) {\n  // Set a deadline by which time the diff must be complete.\n  if (typeof opt_deadline == 'undefined') {\n    if (this.Diff_Timeout <= 0) {\n      opt_deadline = Number.MAX_VALUE;\n    } else {\n      opt_deadline = new Date().getTime() + this.Diff_Timeout * 1000;\n    }\n  }\n\n  var deadline = opt_deadline; // Check for null inputs.\n\n  if (text1 == null || text2 == null) {\n    throw new Error('Null input. (diff_main)');\n  } // Check for equality (speedup).\n\n\n  if (text1 == text2) {\n    if (text1) {\n      return [new diff_match_patch.Diff(DIFF_EQUAL, text1)];\n    }\n\n    return [];\n  }\n\n  if (typeof opt_checklines == 'undefined') {\n    opt_checklines = true;\n  }\n\n  var checklines = opt_checklines; // Trim off common prefix (speedup).\n\n  var commonlength = this.diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength); // Trim off common suffix (speedup).\n\n  commonlength = this.diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength); // Compute the diff on the middle block.\n\n  var diffs = this.diff_compute_(text1, text2, checklines, deadline); // Restore the prefix and suffix.\n\n  if (commonprefix) {\n    diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, commonprefix));\n  }\n\n  if (commonsuffix) {\n    diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, commonsuffix));\n  }\n\n  this.diff_cleanupMerge(diffs);\n  return diffs;\n};\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\n *     line-level diff first to identify the changed areas.\n *     If true, then run a faster, slightly less optimal diff.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\n\n\ndiff_match_patch.prototype.diff_compute_ = function (text1, text2, checklines, deadline) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [new diff_match_patch.Diff(DIFF_INSERT, text2)];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [new diff_match_patch.Diff(DIFF_DELETE, text1)];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [new diff_match_patch.Diff(DIFF_INSERT, longtext.substring(0, i)), new diff_match_patch.Diff(DIFF_EQUAL, shorttext), new diff_match_patch.Diff(DIFF_INSERT, longtext.substring(i + shorttext.length))]; // Swap insertions for deletions if diff is reversed.\n\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [new diff_match_patch.Diff(DIFF_DELETE, text1), new diff_match_patch.Diff(DIFF_INSERT, text2)];\n  } // Check to see if the problem can be split in two.\n\n\n  var hm = this.diff_halfMatch_(text1, text2);\n\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4]; // Send both pairs off for separate processing.\n\n    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\n    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline); // Merge the results.\n\n    return diffs_a.concat([new diff_match_patch.Diff(DIFF_EQUAL, mid_common)], diffs_b);\n  }\n\n  if (checklines && text1.length > 100 && text2.length > 100) {\n    return this.diff_lineMode_(text1, text2, deadline);\n  }\n\n  return this.diff_bisect_(text1, text2, deadline);\n};\n/**\n * Do a quick line-level diff on both strings, then rediff the parts for\n * greater accuracy.\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\n\n\ndiff_match_patch.prototype.diff_lineMode_ = function (text1, text2, deadline) {\n  // Scan the text on a line-by-line basis first.\n  var a = this.diff_linesToChars_(text1, text2);\n  text1 = a.chars1;\n  text2 = a.chars2;\n  var linearray = a.lineArray;\n  var diffs = this.diff_main(text1, text2, false, deadline); // Convert the diff back to original text.\n\n  this.diff_charsToLines_(diffs, linearray); // Eliminate freak matches (e.g. blank lines)\n\n  this.diff_cleanupSemantic(diffs); // Rediff any replacement blocks, this time character-by-character.\n  // Add a dummy entry at the end.\n\n  diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, ''));\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        break;\n\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        break;\n\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete >= 1 && count_insert >= 1) {\n          // Delete the offending records and add the merged ones.\n          diffs.splice(pointer - count_delete - count_insert, count_delete + count_insert);\n          pointer = pointer - count_delete - count_insert;\n          var subDiff = this.diff_main(text_delete, text_insert, false, deadline);\n\n          for (var j = subDiff.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, subDiff[j]);\n          }\n\n          pointer = pointer + subDiff.length;\n        }\n\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n\n    pointer++;\n  }\n\n  diffs.pop(); // Remove the dummy entry at the end.\n\n  return diffs;\n};\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\n\n\ndiff_match_patch.prototype.diff_bisect_ = function (text1, text2, deadline) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length); // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length; // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n\n  var front = delta % 2 != 0; // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n\n  for (var d = 0; d < max_d; d++) {\n    // Bail out if deadline is reached.\n    if (new Date().getTime() > deadline) {\n      break;\n    } // Walk the front path one step.\n\n\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n\n      if (k1 == -d || k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1]) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n\n      var y1 = x1 - k1;\n\n      while (x1 < text1_length && y1 < text2_length && text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n\n      v1[k1_offset] = x1;\n\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    } // Walk the reverse path one step.\n\n\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n\n      if (k2 == -d || k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1]) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n\n      var y2 = x2 - k2;\n\n      while (x2 < text1_length && y2 < text2_length && text1.charAt(text1_length - x2 - 1) == text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n\n      v2[k2_offset] = x2;\n\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset; // Mirror x2 onto top-left coordinate system.\n\n          x2 = text1_length - x2;\n\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n  } // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n\n\n  return [new diff_match_patch.Diff(DIFF_DELETE, text1), new diff_match_patch.Diff(DIFF_INSERT, text2)];\n};\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\n\n\ndiff_match_patch.prototype.diff_bisectSplit_ = function (text1, text2, x, y, deadline) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y); // Compute both diffs serially.\n\n  var diffs = this.diff_main(text1a, text2a, false, deadline);\n  var diffsb = this.diff_main(text1b, text2b, false, deadline);\n  return diffs.concat(diffsb);\n};\n/**\n * Split two texts into an array of strings.  Reduce the texts to a string of\n * hashes where each Unicode character represents one line.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n *     An object containing the encoded text1, the encoded text2 and\n *     the array of unique strings.\n *     The zeroth element of the array of unique strings is intentionally blank.\n * @private\n */\n\n\ndiff_match_patch.prototype.diff_linesToChars_ = function (text1, text2) {\n  var lineArray = []; // e.g. lineArray[4] == 'Hello\\n'\n\n  var lineHash = {}; // e.g. lineHash['Hello\\n'] == 4\n  // '\\x00' is a valid character, but various debuggers don't like it.\n  // So we'll insert a junk entry to avoid generating a null character.\n\n  lineArray[0] = '';\n  /**\n   * Split a text into an array of strings.  Reduce the texts to a string of\n   * hashes where each Unicode character represents one line.\n   * Modifies linearray and linehash through being a closure.\n   * @param {string} text String to encode.\n   * @return {string} Encoded string.\n   * @private\n   */\n\n  function diff_linesToCharsMunge_(text) {\n    var chars = ''; // Walk the text, pulling out a substring for each line.\n    // text.split('\\n') would would temporarily double our memory footprint.\n    // Modifying text would create many large strings to garbage collect.\n\n    var lineStart = 0;\n    var lineEnd = -1; // Keeping our own length variable is faster than looking it up.\n\n    var lineArrayLength = lineArray.length;\n\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf('\\n', lineStart);\n\n      if (lineEnd == -1) {\n        lineEnd = text.length - 1;\n      }\n\n      var line = text.substring(lineStart, lineEnd + 1);\n\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) : lineHash[line] !== undefined) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        if (lineArrayLength == maxLines) {\n          // Bail out at 65535 because\n          // String.fromCharCode(65536) == String.fromCharCode(0)\n          line = text.substring(lineStart);\n          lineEnd = text.length;\n        }\n\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n\n      lineStart = lineEnd + 1;\n    }\n\n    return chars;\n  } // Allocate 2/3rds of the space for text1, the rest for text2.\n\n\n  var maxLines = 40000;\n  var chars1 = diff_linesToCharsMunge_(text1);\n  maxLines = 65535;\n  var chars2 = diff_linesToCharsMunge_(text2);\n  return {\n    chars1: chars1,\n    chars2: chars2,\n    lineArray: lineArray\n  };\n};\n/**\n * Rehydrate the text in a diff from a string of line hashes to real lines of\n * text.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {!Array.<string>} lineArray Array of unique strings.\n * @private\n */\n\n\ndiff_match_patch.prototype.diff_charsToLines_ = function (diffs, lineArray) {\n  for (var i = 0; i < diffs.length; i++) {\n    var chars = diffs[i][1];\n    var text = [];\n\n    for (var j = 0; j < chars.length; j++) {\n      text[j] = lineArray[chars.charCodeAt(j)];\n    }\n\n    diffs[i][1] = text.join('');\n  }\n};\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\n\n\ndiff_match_patch.prototype.diff_commonPrefix = function (text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  } // Binary search.\n  // Performance analysis: https://neil.fraser.name/news/2007/10/09/\n\n\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) == text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  return pointermid;\n};\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\n\n\ndiff_match_patch.prototype.diff_commonSuffix = function (text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  } // Binary search.\n  // Performance analysis: https://neil.fraser.name/news/2007/10/09/\n\n\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) == text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  return pointermid;\n};\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\n\n\ndiff_match_patch.prototype.diff_commonOverlap_ = function (text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length; // Eliminate the null case.\n\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  } // Truncate the longer string.\n\n\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n\n  var text_length = Math.min(text1_length, text2_length); // Quick check for the worst case.\n\n  if (text1 == text2) {\n    return text_length;\n  } // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: https://neil.fraser.name/news/2010/11/04/\n\n\n  var best = 0;\n  var length = 1;\n\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n\n    if (found == -1) {\n      return best;\n    }\n\n    length += found;\n\n    if (found == 0 || text1.substring(text_length - length) == text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n};\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\n\n\ndiff_match_patch.prototype.diff_halfMatch_ = function (text1, text2) {\n  if (this.Diff_Timeout <= 0) {\n    // Don't risk returning a non-optimal diff if we have unlimited time.\n    return null;\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null; // Pointless.\n  }\n\n  var dmp = this; // 'this' becomes 'window' in a closure.\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i), shorttext.substring(j));\n      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i), shorttext.substring(0, j));\n\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) + shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  } // First check if the second quarter is the seed for a half-match.\n\n\n  var hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4)); // Check again based on the third quarter.\n\n  var hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));\n  var hm;\n\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  } // A half-match was found, sort out the return data.\n\n\n  var text1_a, text1_b, text2_a, text2_b;\n\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\n\n\ndiff_match_patch.prototype.diff_cleanupSemantic = function (diffs) {\n  var changes = false;\n  var equalities = []; // Stack of indices where equalities are found.\n\n  var equalitiesLength = 0; // Keeping our own length var is faster in JS.\n\n  /** @type {?string} */\n\n  var lastEquality = null; // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n\n  var pointer = 0; // Index of current position.\n  // Number of characters that changed prior to the equality.\n\n  var length_insertions1 = 0;\n  var length_deletions1 = 0; // Number of characters that changed after the equality.\n\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {\n      // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastEquality = diffs[pointer][1];\n    } else {\n      // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      } // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n\n\n      if (lastEquality && lastEquality.length <= Math.max(length_insertions1, length_deletions1) && lastEquality.length <= Math.max(length_insertions2, length_deletions2)) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0, new diff_match_patch.Diff(DIFF_DELETE, lastEquality)); // Change second copy to insert.\n\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT; // Throw away the equality we just deleted.\n\n        equalitiesLength--; // Throw away the previous equality (it needs to be reevaluated).\n\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0; // Reset the counters.\n\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastEquality = null;\n        changes = true;\n      }\n    }\n\n    pointer++;\n  } // Normalize the diff.\n\n\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n\n  this.diff_cleanupSemanticLossless(diffs); // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n\n  pointer = 1;\n\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] == DIFF_DELETE && diffs[pointer][0] == DIFF_INSERT) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = this.diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = this.diff_commonOverlap_(insertion, deletion);\n\n      if (overlap_length1 >= overlap_length2) {\n        if (overlap_length1 >= deletion.length / 2 || overlap_length1 >= insertion.length / 2) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0, new diff_match_patch.Diff(DIFF_EQUAL, insertion.substring(0, overlap_length1)));\n          diffs[pointer - 1][1] = deletion.substring(0, deletion.length - overlap_length1);\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (overlap_length2 >= deletion.length / 2 || overlap_length2 >= insertion.length / 2) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0, new diff_match_patch.Diff(DIFF_EQUAL, deletion.substring(0, overlap_length2)));\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] = insertion.substring(0, insertion.length - overlap_length2);\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] = deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n\n      pointer++;\n    }\n\n    pointer++;\n  }\n};\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\n\n\ndiff_match_patch.prototype.diff_cleanupSemanticLossless = function (diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    } // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n\n\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(diff_match_patch.nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(diff_match_patch.nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 && char1.match(diff_match_patch.whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 && char2.match(diff_match_patch.whitespaceRegex_);\n    var lineBreak1 = whitespace1 && char1.match(diff_match_patch.linebreakRegex_);\n    var lineBreak2 = whitespace2 && char2.match(diff_match_patch.linebreakRegex_);\n    var blankLine1 = lineBreak1 && one.match(diff_match_patch.blanklineEndRegex_);\n    var blankLine2 = lineBreak2 && two.match(diff_match_patch.blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n\n    return 0;\n  }\n\n  var pointer = 1; // Intentionally ignore the first and last element (don't need checking).\n\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL && diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1]; // First, shift the edit as far left as possible.\n\n      var commonOffset = this.diff_commonSuffix(equality1, edit);\n\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      } // Second, step character by character right, looking for the best fit.\n\n\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) + diff_cleanupSemanticScore_(edit, equality2);\n\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score = diff_cleanupSemanticScore_(equality1, edit) + diff_cleanupSemanticScore_(edit, equality2); // The >= encourages trailing rather than leading whitespace on edits.\n\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n\n        diffs[pointer][1] = bestEdit;\n\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n\n    pointer++;\n  }\n}; // Define some regex patterns for matching boundaries.\n\n\ndiff_match_patch.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\ndiff_match_patch.whitespaceRegex_ = /\\s/;\ndiff_match_patch.linebreakRegex_ = /[\\r\\n]/;\ndiff_match_patch.blanklineEndRegex_ = /\\n\\r?\\n$/;\ndiff_match_patch.blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n/**\n * Reduce the number of edits by eliminating operationally trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\n\ndiff_match_patch.prototype.diff_cleanupEfficiency = function (diffs) {\n  var changes = false;\n  var equalities = []; // Stack of indices where equalities are found.\n\n  var equalitiesLength = 0; // Keeping our own length var is faster in JS.\n\n  /** @type {?string} */\n\n  var lastEquality = null; // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n\n  var pointer = 0; // Index of current position.\n  // Is there an insertion operation before the last equality.\n\n  var pre_ins = false; // Is there a deletion operation before the last equality.\n\n  var pre_del = false; // Is there an insertion operation after the last equality.\n\n  var post_ins = false; // Is there a deletion operation after the last equality.\n\n  var post_del = false;\n\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {\n      // Equality found.\n      if (diffs[pointer][1].length < this.Diff_EditCost && (post_ins || post_del)) {\n        // Candidate found.\n        equalities[equalitiesLength++] = pointer;\n        pre_ins = post_ins;\n        pre_del = post_del;\n        lastEquality = diffs[pointer][1];\n      } else {\n        // Not a candidate, and can never become one.\n        equalitiesLength = 0;\n        lastEquality = null;\n      }\n\n      post_ins = post_del = false;\n    } else {\n      // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_DELETE) {\n        post_del = true;\n      } else {\n        post_ins = true;\n      }\n      /*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n\n\n      if (lastEquality && (pre_ins && pre_del && post_ins && post_del || lastEquality.length < this.Diff_EditCost / 2 && pre_ins + pre_del + post_ins + post_del == 3)) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0, new diff_match_patch.Diff(DIFF_DELETE, lastEquality)); // Change second copy to insert.\n\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--; // Throw away the equality we just deleted;\n\n        lastEquality = null;\n\n        if (pre_ins && pre_del) {\n          // No changes made which could affect previous entry, keep going.\n          post_ins = post_del = true;\n          equalitiesLength = 0;\n        } else {\n          equalitiesLength--; // Throw away the previous equality.\n\n          pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n          post_ins = post_del = false;\n        }\n\n        changes = true;\n      }\n    }\n\n    pointer++;\n  }\n\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\n\n\ndiff_match_patch.prototype.diff_cleanupMerge = function (diffs) {\n  // Add a dummy entry at the end.\n  diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, ''));\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = this.diff_commonPrefix(text_insert, text_delete);\n\n            if (commonlength !== 0) {\n              if (pointer - count_delete - count_insert > 0 && diffs[pointer - count_delete - count_insert - 1][0] == DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] += text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, new diff_match_patch.Diff(DIFF_EQUAL, text_insert.substring(0, commonlength)));\n                pointer++;\n              }\n\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            } // Factor out any common suffixies.\n\n\n            commonlength = this.diff_commonSuffix(text_insert, text_delete);\n\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length - commonlength);\n              text_delete = text_delete.substring(0, text_delete.length - commonlength);\n            }\n          } // Delete the offending records and add the merged ones.\n\n\n          pointer -= count_delete + count_insert;\n          diffs.splice(pointer, count_delete + count_insert);\n\n          if (text_delete.length) {\n            diffs.splice(pointer, 0, new diff_match_patch.Diff(DIFF_DELETE, text_delete));\n            pointer++;\n          }\n\n          if (text_insert.length) {\n            diffs.splice(pointer, 0, new diff_match_patch.Diff(DIFF_INSERT, text_insert));\n            pointer++;\n          }\n\n          pointer++;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop(); // Remove the dummy entry at the end.\n  } // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n\n\n  var changes = false;\n  pointer = 1; // Intentionally ignore the first and last element (don't need checking).\n\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL && diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length - diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] + diffs[pointer][1].substring(0, diffs[pointer][1].length - diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) == diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] = diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n\n    pointer++;\n  } // If shifts were made, the diff needs reordering and another shift sweep.\n\n\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n/**\n * loc is a location in text1, compute and return the equivalent location in\n * text2.\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {number} loc Location within text1.\n * @return {number} Location within text2.\n */\n\n\ndiff_match_patch.prototype.diff_xIndex = function (diffs, loc) {\n  var chars1 = 0;\n  var chars2 = 0;\n  var last_chars1 = 0;\n  var last_chars2 = 0;\n  var x;\n\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      // Equality or deletion.\n      chars1 += diffs[x][1].length;\n    }\n\n    if (diffs[x][0] !== DIFF_DELETE) {\n      // Equality or insertion.\n      chars2 += diffs[x][1].length;\n    }\n\n    if (chars1 > loc) {\n      // Overshot the location.\n      break;\n    }\n\n    last_chars1 = chars1;\n    last_chars2 = chars2;\n  } // Was the location was deleted?\n\n\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\n    return last_chars2;\n  } // Add the remaining character length.\n\n\n  return last_chars2 + (loc - last_chars1);\n};\n/**\n * Convert a diff array into a pretty HTML report.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} HTML representation.\n */\n\n\ndiff_match_patch.prototype.diff_prettyHtml = function (diffs) {\n  var html = [];\n  var pattern_amp = /&/g;\n  var pattern_lt = /</g;\n  var pattern_gt = />/g;\n  var pattern_para = /\\n/g;\n\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0]; // Operation (insert, delete, equal)\n\n    var data = diffs[x][1]; // Text of change.\n\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;').replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\n\n    switch (op) {\n      case DIFF_INSERT:\n        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\n        break;\n\n      case DIFF_DELETE:\n        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\n        break;\n\n      case DIFF_EQUAL:\n        html[x] = '<span>' + text + '</span>';\n        break;\n    }\n  }\n\n  return html.join('');\n};\n/**\n * Compute and return the source text (all equalities and deletions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Source text.\n */\n\n\ndiff_match_patch.prototype.diff_text1 = function (diffs) {\n  var text = [];\n\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1];\n    }\n  }\n\n  return text.join('');\n};\n/**\n * Compute and return the destination text (all equalities and insertions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Destination text.\n */\n\n\ndiff_match_patch.prototype.diff_text2 = function (diffs) {\n  var text = [];\n\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1];\n    }\n  }\n\n  return text.join('');\n};\n/**\n * Compute the Levenshtein distance; the number of inserted, deleted or\n * substituted characters.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {number} Number of changes.\n */\n\n\ndiff_match_patch.prototype.diff_levenshtein = function (diffs) {\n  var levenshtein = 0;\n  var insertions = 0;\n  var deletions = 0;\n\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];\n    var data = diffs[x][1];\n\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n\n      case DIFF_EQUAL:\n        // A deletion and an insertion is one substitution.\n        levenshtein += Math.max(insertions, deletions);\n        insertions = 0;\n        deletions = 0;\n        break;\n    }\n  }\n\n  levenshtein += Math.max(insertions, deletions);\n  return levenshtein;\n};\n/**\n * Crush the diff into an encoded string which describes the operations\n * required to transform text1 into text2.\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Delta text.\n */\n\n\ndiff_match_patch.prototype.diff_toDelta = function (diffs) {\n  var text = [];\n\n  for (var x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        text[x] = '+' + encodeURI(diffs[x][1]);\n        break;\n\n      case DIFF_DELETE:\n        text[x] = '-' + diffs[x][1].length;\n        break;\n\n      case DIFF_EQUAL:\n        text[x] = '=' + diffs[x][1].length;\n        break;\n    }\n  }\n\n  return text.join('\\t').replace(/%20/g, ' ');\n};\n/**\n * Given the original text1, and an encoded string which describes the\n * operations required to transform text1 into text2, compute the full diff.\n * @param {string} text1 Source string for the diff.\n * @param {string} delta Delta text.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @throws {!Error} If invalid input.\n */\n\n\ndiff_match_patch.prototype.diff_fromDelta = function (text1, delta) {\n  var diffs = [];\n  var diffsLength = 0; // Keeping our own length var is faster in JS.\n\n  var pointer = 0; // Cursor in text1\n\n  var tokens = delta.split(/\\t/g);\n\n  for (var x = 0; x < tokens.length; x++) {\n    // Each token begins with a one character parameter which specifies the\n    // operation of this token (delete, insert, equality).\n    var param = tokens[x].substring(1);\n\n    switch (tokens[x].charAt(0)) {\n      case '+':\n        try {\n          diffs[diffsLength++] = new diff_match_patch.Diff(DIFF_INSERT, decodeURI(param));\n        } catch (ex) {\n          // Malformed URI sequence.\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\n        }\n\n        break;\n\n      case '-': // Fall through.\n\n      case '=':\n        var n = parseInt(param, 10);\n\n        if (isNaN(n) || n < 0) {\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\n        }\n\n        var text = text1.substring(pointer, pointer += n);\n\n        if (tokens[x].charAt(0) == '=') {\n          diffs[diffsLength++] = new diff_match_patch.Diff(DIFF_EQUAL, text);\n        } else {\n          diffs[diffsLength++] = new diff_match_patch.Diff(DIFF_DELETE, text);\n        }\n\n        break;\n\n      default:\n        // Blank tokens are ok (from a trailing \\t).\n        // Anything else is an error.\n        if (tokens[x]) {\n          throw new Error('Invalid diff operation in diff_fromDelta: ' + tokens[x]);\n        }\n\n    }\n  }\n\n  if (pointer != text1.length) {\n    throw new Error('Delta length (' + pointer + ') does not equal source text length (' + text1.length + ').');\n  }\n\n  return diffs;\n}; //  MATCH FUNCTIONS\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n */\n\n\ndiff_match_patch.prototype.match_main = function (text, pattern, loc) {\n  // Check for null inputs.\n  if (text == null || pattern == null || loc == null) {\n    throw new Error('Null input. (match_main)');\n  }\n\n  loc = Math.max(0, Math.min(loc, text.length));\n\n  if (text == pattern) {\n    // Shortcut (potentially not guaranteed by the algorithm)\n    return 0;\n  } else if (!text.length) {\n    // Nothing to match.\n    return -1;\n  } else if (text.substring(loc, loc + pattern.length) == pattern) {\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\n    return loc;\n  } else {\n    // Do a fuzzy compare.\n    return this.match_bitap_(text, pattern, loc);\n  }\n};\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\n * Bitap algorithm.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n * @private\n */\n\n\ndiff_match_patch.prototype.match_bitap_ = function (text, pattern, loc) {\n  if (pattern.length > this.Match_MaxBits) {\n    throw new Error('Pattern too long for this browser.');\n  } // Initialise the alphabet.\n\n\n  var s = this.match_alphabet_(pattern);\n  var dmp = this; // 'this' becomes 'window' in a closure.\n\n  /**\n   * Compute and return the score for a match with e errors and x location.\n   * Accesses loc and pattern through being a closure.\n   * @param {number} e Number of errors in match.\n   * @param {number} x Location of match.\n   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\n   * @private\n   */\n\n  function match_bitapScore_(e, x) {\n    var accuracy = e / pattern.length;\n    var proximity = Math.abs(loc - x);\n\n    if (!dmp.Match_Distance) {\n      // Dodge divide by zero error.\n      return proximity ? 1.0 : accuracy;\n    }\n\n    return accuracy + proximity / dmp.Match_Distance;\n  } // Highest score beyond which we give up.\n\n\n  var score_threshold = this.Match_Threshold; // Is there a nearby exact match? (speedup)\n\n  var best_loc = text.indexOf(pattern, loc);\n\n  if (best_loc != -1) {\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold); // What about in the other direction? (speedup)\n\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\n\n    if (best_loc != -1) {\n      score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    }\n  } // Initialise the bit arrays.\n\n\n  var matchmask = 1 << pattern.length - 1;\n  best_loc = -1;\n  var bin_min, bin_mid;\n  var bin_max = pattern.length + text.length;\n  var last_rd;\n\n  for (var d = 0; d < pattern.length; d++) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from 'loc' we can stray at this\n    // error level.\n    bin_min = 0;\n    bin_mid = bin_max;\n\n    while (bin_min < bin_mid) {\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\n        bin_min = bin_mid;\n      } else {\n        bin_max = bin_mid;\n      }\n\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\n    } // Use the result from this iteration as the maximum for the next.\n\n\n    bin_max = bin_mid;\n    var start = Math.max(1, loc - bin_mid + 1);\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\n    var rd = Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n\n    for (var j = finish; j >= start; j--) {\n      // The alphabet (s) is a sparse hash, so the following line generates\n      // warnings.\n      var charMatch = s[text.charAt(j - 1)];\n\n      if (d === 0) {\n        // First pass: exact match.\n        rd[j] = (rd[j + 1] << 1 | 1) & charMatch;\n      } else {\n        // Subsequent passes: fuzzy match.\n        rd[j] = (rd[j + 1] << 1 | 1) & charMatch | ((last_rd[j + 1] | last_rd[j]) << 1 | 1) | last_rd[j + 1];\n      }\n\n      if (rd[j] & matchmask) {\n        var score = match_bitapScore_(d, j - 1); // This match will almost certainly be better than any existing match.\n        // But check anyway.\n\n        if (score <= score_threshold) {\n          // Told you so.\n          score_threshold = score;\n          best_loc = j - 1;\n\n          if (best_loc > loc) {\n            // When passing loc, don't exceed our current distance from loc.\n            start = Math.max(1, 2 * loc - best_loc);\n          } else {\n            // Already passed loc, downhill from here on in.\n            break;\n          }\n        }\n      }\n    } // No hope for a (better) match at greater error levels.\n\n\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\n      break;\n    }\n\n    last_rd = rd;\n  }\n\n  return best_loc;\n};\n/**\n * Initialise the alphabet for the Bitap algorithm.\n * @param {string} pattern The text to encode.\n * @return {!Object} Hash of character locations.\n * @private\n */\n\n\ndiff_match_patch.prototype.match_alphabet_ = function (pattern) {\n  var s = {};\n\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] = 0;\n  }\n\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] |= 1 << pattern.length - i - 1;\n  }\n\n  return s;\n}; //  PATCH FUNCTIONS\n\n/**\n * Increase the context until it is unique,\n * but don't let the pattern expand beyond Match_MaxBits.\n * @param {!diff_match_patch.patch_obj} patch The patch to grow.\n * @param {string} text Source text.\n * @private\n */\n\n\ndiff_match_patch.prototype.patch_addContext_ = function (patch, text) {\n  if (text.length == 0) {\n    return;\n  }\n\n  if (patch.start2 === null) {\n    throw Error('patch not initialized');\n  }\n\n  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\n  var padding = 0; // Look for the first and last matches of pattern in text.  If two different\n  // matches are found, increase the pattern length.\n\n  while (text.indexOf(pattern) != text.lastIndexOf(pattern) && pattern.length < this.Match_MaxBits - this.Patch_Margin - this.Patch_Margin) {\n    padding += this.Patch_Margin;\n    pattern = text.substring(patch.start2 - padding, patch.start2 + patch.length1 + padding);\n  } // Add one chunk for good luck.\n\n\n  padding += this.Patch_Margin; // Add the prefix.\n\n  var prefix = text.substring(patch.start2 - padding, patch.start2);\n\n  if (prefix) {\n    patch.diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, prefix));\n  } // Add the suffix.\n\n\n  var suffix = text.substring(patch.start2 + patch.length1, patch.start2 + patch.length1 + padding);\n\n  if (suffix) {\n    patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, suffix));\n  } // Roll back the start points.\n\n\n  patch.start1 -= prefix.length;\n  patch.start2 -= prefix.length; // Extend the lengths.\n\n  patch.length1 += prefix.length + suffix.length;\n  patch.length2 += prefix.length + suffix.length;\n};\n/**\n * Compute a list of patches to turn text1 into text2.\n * Use diffs if provided, otherwise compute it ourselves.\n * There are four ways to call this function, depending on what data is\n * available to the caller:\n * Method 1:\n * a = text1, b = text2\n * Method 2:\n * a = diffs\n * Method 3 (optimal):\n * a = text1, b = diffs\n * Method 4 (deprecated, use method 3):\n * a = text1, b = text2, c = diffs\n *\n * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\n * Array of diff tuples for text1 to text2 (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>=} opt_b text2 (methods 1,4) or\n * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>=} opt_c Array of diff tuples\n * for text1 to text2 (method 4) or undefined (methods 1,2,3).\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\n\n\ndiff_match_patch.prototype.patch_make = function (a, opt_b, opt_c) {\n  var text1, diffs;\n\n  if (typeof a == 'string' && typeof opt_b == 'string' && typeof opt_c == 'undefined') {\n    // Method 1: text1, text2\n    // Compute diffs from text1 and text2.\n    text1 =\n    /** @type {string} */\n    a;\n    diffs = this.diff_main(text1,\n    /** @type {string} */\n    opt_b, true);\n\n    if (diffs.length > 2) {\n      this.diff_cleanupSemantic(diffs);\n      this.diff_cleanupEfficiency(diffs);\n    }\n  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' && typeof opt_c == 'undefined') {\n    // Method 2: diffs\n    // Compute text1 from diffs.\n    diffs =\n    /** @type {!Array.<!diff_match_patch.Diff>} */\n    a;\n    text1 = this.diff_text1(diffs);\n  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' && typeof opt_c == 'undefined') {\n    // Method 3: text1, diffs\n    text1 =\n    /** @type {string} */\n    a;\n    diffs =\n    /** @type {!Array.<!diff_match_patch.Diff>} */\n    opt_b;\n  } else if (typeof a == 'string' && typeof opt_b == 'string' && opt_c && typeof opt_c == 'object') {\n    // Method 4: text1, text2, diffs\n    // text2 is not used.\n    text1 =\n    /** @type {string} */\n    a;\n    diffs =\n    /** @type {!Array.<!diff_match_patch.Diff>} */\n    opt_c;\n  } else {\n    throw new Error('Unknown call format to patch_make.');\n  }\n\n  if (diffs.length === 0) {\n    return []; // Get rid of the null case.\n  }\n\n  var patches = [];\n  var patch = new diff_match_patch.patch_obj();\n  var patchDiffLength = 0; // Keeping our own length var is faster in JS.\n\n  var char_count1 = 0; // Number of characters into the text1 string.\n\n  var char_count2 = 0; // Number of characters into the text2 string.\n  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\n  // text2 (postpatch_text).  We recreate the patches one by one to determine\n  // context info.\n\n  var prepatch_text = text1;\n  var postpatch_text = text1;\n\n  for (var x = 0; x < diffs.length; x++) {\n    var diff_type = diffs[x][0];\n    var diff_text = diffs[x][1];\n\n    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\n      // A new patch starts here.\n      patch.start1 = char_count1;\n      patch.start2 = char_count2;\n    }\n\n    switch (diff_type) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = diffs[x];\n        patch.length2 += diff_text.length;\n        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text + postpatch_text.substring(char_count2);\n        break;\n\n      case DIFF_DELETE:\n        patch.length1 += diff_text.length;\n        patch.diffs[patchDiffLength++] = diffs[x];\n        postpatch_text = postpatch_text.substring(0, char_count2) + postpatch_text.substring(char_count2 + diff_text.length);\n        break;\n\n      case DIFF_EQUAL:\n        if (diff_text.length <= 2 * this.Patch_Margin && patchDiffLength && diffs.length != x + 1) {\n          // Small equality inside a patch.\n          patch.diffs[patchDiffLength++] = diffs[x];\n          patch.length1 += diff_text.length;\n          patch.length2 += diff_text.length;\n        } else if (diff_text.length >= 2 * this.Patch_Margin) {\n          // Time for a new patch.\n          if (patchDiffLength) {\n            this.patch_addContext_(patch, prepatch_text);\n            patches.push(patch);\n            patch = new diff_match_patch.patch_obj();\n            patchDiffLength = 0; // Unlike Unidiff, our patch lists have a rolling context.\n            // https://github.com/google/diff-match-patch/wiki/Unidiff\n            // Update prepatch text & pos to reflect the application of the\n            // just completed patch.\n\n            prepatch_text = postpatch_text;\n            char_count1 = char_count2;\n          }\n        }\n\n        break;\n    } // Update the current character count.\n\n\n    if (diff_type !== DIFF_INSERT) {\n      char_count1 += diff_text.length;\n    }\n\n    if (diff_type !== DIFF_DELETE) {\n      char_count2 += diff_text.length;\n    }\n  } // Pick up the leftover patch if not empty.\n\n\n  if (patchDiffLength) {\n    this.patch_addContext_(patch, prepatch_text);\n    patches.push(patch);\n  }\n\n  return patches;\n};\n/**\n * Given an array of patches, return another array that is identical.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\n\n\ndiff_match_patch.prototype.patch_deepCopy = function (patches) {\n  // Making deep copies is hard in JavaScript.\n  var patchesCopy = [];\n\n  for (var x = 0; x < patches.length; x++) {\n    var patch = patches[x];\n    var patchCopy = new diff_match_patch.patch_obj();\n    patchCopy.diffs = [];\n\n    for (var y = 0; y < patch.diffs.length; y++) {\n      patchCopy.diffs[y] = new diff_match_patch.Diff(patch.diffs[y][0], patch.diffs[y][1]);\n    }\n\n    patchCopy.start1 = patch.start1;\n    patchCopy.start2 = patch.start2;\n    patchCopy.length1 = patch.length1;\n    patchCopy.length2 = patch.length2;\n    patchesCopy[x] = patchCopy;\n  }\n\n  return patchesCopy;\n};\n/**\n * Merge a set of patches onto the text.  Return a patched text, as well\n * as a list of true/false values indicating which patches were applied.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @param {string} text Old text.\n * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\n *      new text and an array of boolean values.\n */\n\n\ndiff_match_patch.prototype.patch_apply = function (patches, text) {\n  if (patches.length == 0) {\n    return [text, []];\n  } // Deep copy the patches so that no changes are made to originals.\n\n\n  patches = this.patch_deepCopy(patches);\n  var nullPadding = this.patch_addPadding(patches);\n  text = nullPadding + text + nullPadding;\n  this.patch_splitMax(patches); // delta keeps track of the offset between the expected and actual location\n  // of the previous patch.  If there are patches expected at positions 10 and\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\n  // has an effective expected position of 22.\n\n  var delta = 0;\n  var results = [];\n\n  for (var x = 0; x < patches.length; x++) {\n    var expected_loc = patches[x].start2 + delta;\n    var text1 = this.diff_text1(patches[x].diffs);\n    var start_loc;\n    var end_loc = -1;\n\n    if (text1.length > this.Match_MaxBits) {\n      // patch_splitMax will only provide an oversized pattern in the case of\n      // a monster delete.\n      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits), expected_loc);\n\n      if (start_loc != -1) {\n        end_loc = this.match_main(text, text1.substring(text1.length - this.Match_MaxBits), expected_loc + text1.length - this.Match_MaxBits);\n\n        if (end_loc == -1 || start_loc >= end_loc) {\n          // Can't find valid trailing context.  Drop this patch.\n          start_loc = -1;\n        }\n      }\n    } else {\n      start_loc = this.match_main(text, text1, expected_loc);\n    }\n\n    if (start_loc == -1) {\n      // No match found.  :(\n      results[x] = false; // Subtract the delta for this failed patch from subsequent patches.\n\n      delta -= patches[x].length2 - patches[x].length1;\n    } else {\n      // Found a match.  :)\n      results[x] = true;\n      delta = start_loc - expected_loc;\n      var text2;\n\n      if (end_loc == -1) {\n        text2 = text.substring(start_loc, start_loc + text1.length);\n      } else {\n        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\n      }\n\n      if (text1 == text2) {\n        // Perfect match, just shove the replacement text in.\n        text = text.substring(0, start_loc) + this.diff_text2(patches[x].diffs) + text.substring(start_loc + text1.length);\n      } else {\n        // Imperfect match.  Run a diff to get a framework of equivalent\n        // indices.\n        var diffs = this.diff_main(text1, text2, false);\n\n        if (text1.length > this.Match_MaxBits && this.diff_levenshtein(diffs) / text1.length > this.Patch_DeleteThreshold) {\n          // The end points match, but the content is unacceptably bad.\n          results[x] = false;\n        } else {\n          this.diff_cleanupSemanticLossless(diffs);\n          var index1 = 0;\n          var index2;\n\n          for (var y = 0; y < patches[x].diffs.length; y++) {\n            var mod = patches[x].diffs[y];\n\n            if (mod[0] !== DIFF_EQUAL) {\n              index2 = this.diff_xIndex(diffs, index1);\n            }\n\n            if (mod[0] === DIFF_INSERT) {\n              // Insertion\n              text = text.substring(0, start_loc + index2) + mod[1] + text.substring(start_loc + index2);\n            } else if (mod[0] === DIFF_DELETE) {\n              // Deletion\n              text = text.substring(0, start_loc + index2) + text.substring(start_loc + this.diff_xIndex(diffs, index1 + mod[1].length));\n            }\n\n            if (mod[0] !== DIFF_DELETE) {\n              index1 += mod[1].length;\n            }\n          }\n        }\n      }\n    }\n  } // Strip the padding off.\n\n\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\n  return [text, results];\n};\n/**\n * Add some padding on text start and end so that edges can match something.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} The padding string added to each side.\n */\n\n\ndiff_match_patch.prototype.patch_addPadding = function (patches) {\n  var paddingLength = this.Patch_Margin;\n  var nullPadding = '';\n\n  for (var x = 1; x <= paddingLength; x++) {\n    nullPadding += String.fromCharCode(x);\n  } // Bump all the patches forward.\n\n\n  for (var x = 0; x < patches.length; x++) {\n    patches[x].start1 += paddingLength;\n    patches[x].start2 += paddingLength;\n  } // Add some padding on start of first diff.\n\n\n  var patch = patches[0];\n  var diffs = patch.diffs;\n\n  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, nullPadding));\n    patch.start1 -= paddingLength; // Should be 0.\n\n    patch.start2 -= paddingLength; // Should be 0.\n\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[0][1].length) {\n    // Grow first equality.\n    var extraLength = paddingLength - diffs[0][1].length;\n    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\n    patch.start1 -= extraLength;\n    patch.start2 -= extraLength;\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  } // Add some padding on end of last diff.\n\n\n  patch = patches[patches.length - 1];\n  diffs = patch.diffs;\n\n  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, nullPadding));\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    // Grow last equality.\n    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  return nullPadding;\n};\n/**\n * Look through the patches and break up any which are longer than the maximum\n * limit of the match algorithm.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n */\n\n\ndiff_match_patch.prototype.patch_splitMax = function (patches) {\n  var patch_size = this.Match_MaxBits;\n\n  for (var x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patch_size) {\n      continue;\n    }\n\n    var bigpatch = patches[x]; // Remove the big old patch.\n\n    patches.splice(x--, 1);\n    var start1 = bigpatch.start1;\n    var start2 = bigpatch.start2;\n    var precontext = '';\n\n    while (bigpatch.diffs.length !== 0) {\n      // Create one of several smaller patches.\n      var patch = new diff_match_patch.patch_obj();\n      var empty = true;\n      patch.start1 = start1 - precontext.length;\n      patch.start2 = start2 - precontext.length;\n\n      if (precontext !== '') {\n        patch.length1 = patch.length2 = precontext.length;\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, precontext));\n      }\n\n      while (bigpatch.diffs.length !== 0 && patch.length1 < patch_size - this.Patch_Margin) {\n        var diff_type = bigpatch.diffs[0][0];\n        var diff_text = bigpatch.diffs[0][1];\n\n        if (diff_type === DIFF_INSERT) {\n          // Insertions are harmless.\n          patch.length2 += diff_text.length;\n          start2 += diff_text.length;\n          patch.diffs.push(bigpatch.diffs.shift());\n          empty = false;\n        } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 && patch.diffs[0][0] == DIFF_EQUAL && diff_text.length > 2 * patch_size) {\n          // This is a large deletion.  Let it pass in one chunk.\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          empty = false;\n          patch.diffs.push(new diff_match_patch.Diff(diff_type, diff_text));\n          bigpatch.diffs.shift();\n        } else {\n          // Deletion or equality.  Only take as much as we can stomach.\n          diff_text = diff_text.substring(0, patch_size - patch.length1 - this.Patch_Margin);\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n\n          if (diff_type === DIFF_EQUAL) {\n            patch.length2 += diff_text.length;\n            start2 += diff_text.length;\n          } else {\n            empty = false;\n          }\n\n          patch.diffs.push(new diff_match_patch.Diff(diff_type, diff_text));\n\n          if (diff_text == bigpatch.diffs[0][1]) {\n            bigpatch.diffs.shift();\n          } else {\n            bigpatch.diffs[0][1] = bigpatch.diffs[0][1].substring(diff_text.length);\n          }\n        }\n      } // Compute the head context for the next patch.\n\n\n      precontext = this.diff_text2(patch.diffs);\n      precontext = precontext.substring(precontext.length - this.Patch_Margin); // Append the end context for this patch.\n\n      var postcontext = this.diff_text1(bigpatch.diffs).substring(0, this.Patch_Margin);\n\n      if (postcontext !== '') {\n        patch.length1 += postcontext.length;\n        patch.length2 += postcontext.length;\n\n        if (patch.diffs.length !== 0 && patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\n          patch.diffs[patch.diffs.length - 1][1] += postcontext;\n        } else {\n          patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, postcontext));\n        }\n      }\n\n      if (!empty) {\n        patches.splice(++x, 0, patch);\n      }\n    }\n  }\n};\n/**\n * Take a list of patches and return a textual representation.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} Text representation of patches.\n */\n\n\ndiff_match_patch.prototype.patch_toText = function (patches) {\n  var text = [];\n\n  for (var x = 0; x < patches.length; x++) {\n    text[x] = patches[x];\n  }\n\n  return text.join('');\n};\n/**\n * Parse a textual representation of patches and return a list of Patch objects.\n * @param {string} textline Text representation of patches.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n * @throws {!Error} If invalid input.\n */\n\n\ndiff_match_patch.prototype.patch_fromText = function (textline) {\n  var patches = [];\n\n  if (!textline) {\n    return patches;\n  }\n\n  var text = textline.split('\\n');\n  var textPointer = 0;\n  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\n\n  while (textPointer < text.length) {\n    var m = text[textPointer].match(patchHeader);\n\n    if (!m) {\n      throw new Error('Invalid patch string: ' + text[textPointer]);\n    }\n\n    var patch = new diff_match_patch.patch_obj();\n    patches.push(patch);\n    patch.start1 = parseInt(m[1], 10);\n\n    if (m[2] === '') {\n      patch.start1--;\n      patch.length1 = 1;\n    } else if (m[2] == '0') {\n      patch.length1 = 0;\n    } else {\n      patch.start1--;\n      patch.length1 = parseInt(m[2], 10);\n    }\n\n    patch.start2 = parseInt(m[3], 10);\n\n    if (m[4] === '') {\n      patch.start2--;\n      patch.length2 = 1;\n    } else if (m[4] == '0') {\n      patch.length2 = 0;\n    } else {\n      patch.start2--;\n      patch.length2 = parseInt(m[4], 10);\n    }\n\n    textPointer++;\n\n    while (textPointer < text.length) {\n      var sign = text[textPointer].charAt(0);\n\n      try {\n        var line = decodeURI(text[textPointer].substring(1));\n      } catch (ex) {\n        // Malformed URI sequence.\n        throw new Error('Illegal escape in patch_fromText: ' + line);\n      }\n\n      if (sign == '-') {\n        // Deletion.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_DELETE, line));\n      } else if (sign == '+') {\n        // Insertion.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_INSERT, line));\n      } else if (sign == ' ') {\n        // Minor equality.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, line));\n      } else if (sign == '@') {\n        // Start of next patch.\n        break;\n      } else if (sign === '') {// Blank line?  Whatever.\n      } else {\n        // WTF?\n        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\n      }\n\n      textPointer++;\n    }\n  }\n\n  return patches;\n};\n/**\n * Class representing one patch operation.\n * @constructor\n */\n\n\ndiff_match_patch.patch_obj = function () {\n  /** @type {!Array.<!diff_match_patch.Diff>} */\n  this.diffs = [];\n  /** @type {?number} */\n\n  this.start1 = null;\n  /** @type {?number} */\n\n  this.start2 = null;\n  /** @type {number} */\n\n  this.length1 = 0;\n  /** @type {number} */\n\n  this.length2 = 0;\n};\n/**\n * Emulate GNU diff's format.\n * Header: @@ -382,8 +481,9 @@\n * Indices are printed as 1-based, not 0-based.\n * @return {string} The GNU diff string.\n */\n\n\ndiff_match_patch.patch_obj.prototype.toString = function () {\n  var coords1, coords2;\n\n  if (this.length1 === 0) {\n    coords1 = this.start1 + ',0';\n  } else if (this.length1 == 1) {\n    coords1 = this.start1 + 1;\n  } else {\n    coords1 = this.start1 + 1 + ',' + this.length1;\n  }\n\n  if (this.length2 === 0) {\n    coords2 = this.start2 + ',0';\n  } else if (this.length2 == 1) {\n    coords2 = this.start2 + 1;\n  } else {\n    coords2 = this.start2 + 1 + ',' + this.length2;\n  }\n\n  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\n  var op; // Escape the body of the patch with %xx notation.\n\n  for (var x = 0; x < this.diffs.length; x++) {\n    switch (this.diffs[x][0]) {\n      case DIFF_INSERT:\n        op = '+';\n        break;\n\n      case DIFF_DELETE:\n        op = '-';\n        break;\n\n      case DIFF_EQUAL:\n        op = ' ';\n        break;\n    }\n\n    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\n  }\n\n  return text.join('').replace(/%20/g, ' ');\n}; // The following export code was added by @ForbesLindesay\n\n\nmodule.exports = diff_match_patch;\nmodule.exports['diff_match_patch'] = diff_match_patch;\nmodule.exports['DIFF_DELETE'] = DIFF_DELETE;\nmodule.exports['DIFF_INSERT'] = DIFF_INSERT;\nmodule.exports['DIFF_EQUAL'] = DIFF_EQUAL;","(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\((?!\\s*\\))\\s*)(?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))+?(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    'important': /!important\\b/i,\n    'function': /[-a-z0-9]+(?=\\()/i,\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n        inside: {\n          'attr-name': {\n            pattern: /^\\s*style/i,\n            inside: markup.tag.inside\n          },\n          'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n          'attr-value': {\n            pattern: /.+/i,\n            inside: Prism.languages.css\n          }\n        },\n        alias: 'language-css'\n      }\n    }, markup.tag);\n  }\n})(Prism);","Prism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;","/// <reference lib=\"WebWorker\"/>\nvar _self = typeof window !== 'undefined' ? window // if in browser\n: typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope ? self // if in worker\n: {} // if in node js\n;\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n\n\nvar Prism = function (_self) {\n  // Private helper vars\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  var uniqueId = 0;\n  var _ = {\n    /**\n     * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n     * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n     * additional languages or plugins yourself.\n     *\n     * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n     *\n     * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n     * empty Prism object into the global scope before loading the Prism script like this:\n     *\n     * ```js\n     * window.Prism = window.Prism || {};\n     * Prism.manual = true;\n     * // add a new <script> to load Prism's script\n     * ```\n     *\n     * @default false\n     * @type {boolean}\n     * @memberof Prism\n     * @public\n     */\n    manual: _self.Prism && _self.Prism.manual,\n    disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n    /**\n     * A namespace for utility methods.\n     *\n     * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n     * change or disappear at any time.\n     *\n     * @namespace\n     * @memberof Prism\n     */\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n\n      /**\n       * Returns the name of the type of the given value.\n       *\n       * @param {any} o\n       * @returns {string}\n       * @example\n       * type(null)      === 'Null'\n       * type(undefined) === 'Undefined'\n       * type(123)       === 'Number'\n       * type('foo')     === 'String'\n       * type(true)      === 'Boolean'\n       * type([1, 2])    === 'Array'\n       * type({})        === 'Object'\n       * type(String)    === 'Function'\n       * type(/abc+/)    === 'RegExp'\n       */\n      type: function type(o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n\n      /**\n       * Returns a unique number for the given object. Later calls will still return the same number.\n       *\n       * @param {Object} obj\n       * @returns {number}\n       */\n      objId: function objId(obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n\n        return obj['__id'];\n      },\n\n      /**\n       * Creates a deep clone of the given object.\n       *\n       * The main intended use of this function is to clone language definitions.\n       *\n       * @param {T} o\n       * @param {Record<number, any>} [visited]\n       * @returns {T}\n       * @template T\n       */\n      clone: function deepClone(o, visited) {\n        visited = visited || {};\n        var clone, id;\n\n        switch (_.util.type(o)) {\n          case 'Object':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone =\n            /** @type {Record<string, any>} */\n            {};\n            visited[id] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          case 'Array':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = [];\n            visited[id] = clone;\n\n            /** @type {Array} */\n\n            /** @type {any} */\n            o.forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          default:\n            return o;\n        }\n      },\n\n      /**\n       * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n       *\n       * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n       *\n       * @param {Element} element\n       * @returns {string}\n       */\n      getLanguage: function getLanguage(element) {\n        while (element && !lang.test(element.className)) {\n          element = element.parentElement;\n        }\n\n        if (element) {\n          return (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n        }\n\n        return 'none';\n      },\n\n      /**\n       * Returns the script element that is currently executing.\n       *\n       * This does __not__ work for line script element.\n       *\n       * @returns {HTMLScriptElement | null}\n       */\n      currentScript: function currentScript() {\n        if (typeof document === 'undefined') {\n          return null;\n        }\n\n        if ('currentScript' in document && 1 < 2\n        /* hack to trip TS' flow analysis */\n        ) {\n            return (\n              /** @type {any} */\n              document.currentScript\n            );\n          } // IE11 workaround\n        // we'll get the src of the current script by parsing IE11's error stack trace\n        // this will not work for inline scripts\n\n\n        try {\n          throw new Error();\n        } catch (err) {\n          // Get file src url from stack. Specifically works with the format of stack traces in IE.\n          // A stack will look like this:\n          //\n          // Error\n          //    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n          //    at Global code (http://localhost/components/prism-core.js:606:1)\n          var src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\n          if (src) {\n            var scripts = document.getElementsByTagName('script');\n\n            for (var i in scripts) {\n              if (scripts[i].src == src) {\n                return scripts[i];\n              }\n            }\n          }\n\n          return null;\n        }\n      },\n\n      /**\n       * Returns whether a given class is active for `element`.\n       *\n       * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n       * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n       * given class is just the given class with a `no-` prefix.\n       *\n       * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n       * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n       * ancestors have the given class or the negated version of it, then the default activation will be returned.\n       *\n       * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n       * version of it, the class is considered active.\n       *\n       * @param {Element} element\n       * @param {string} className\n       * @param {boolean} [defaultActivation=false]\n       * @returns {boolean}\n       */\n      isActive: function isActive(element, className, defaultActivation) {\n        var no = 'no-' + className;\n\n        while (element) {\n          var classList = element.classList;\n\n          if (classList.contains(className)) {\n            return true;\n          }\n\n          if (classList.contains(no)) {\n            return false;\n          }\n\n          element = element.parentElement;\n        }\n\n        return !!defaultActivation;\n      }\n    },\n\n    /**\n     * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n     *\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    languages: {\n      /**\n       * Creates a deep copy of the language with the given id and appends the given tokens.\n       *\n       * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n       * will be overwritten at its original position.\n       *\n       * ## Best practices\n       *\n       * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n       * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n       * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n       *\n       * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n       * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n       *\n       * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n       * @param {Grammar} redef The new tokens to append.\n       * @returns {Grammar} The new language created.\n       * @public\n       * @example\n       * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n       *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n       *     // at its original position\n       *     'comment': { ... },\n       *     // CSS doesn't have a 'color' token, so this token will be appended\n       *     'color': /\\b(?:red|green|blue)\\b/\n       * });\n       */\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Inserts tokens _before_ another token in a language definition or any other grammar.\n       *\n       * ## Usage\n       *\n       * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n       * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n       * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n       * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n       * this:\n       *\n       * ```js\n       * Prism.languages.markup.style = {\n       *     // token\n       * };\n       * ```\n       *\n       * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n       * before existing tokens. For the CSS example above, you would use it like this:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'cdata', {\n       *     'style': {\n       *         // token\n       *     }\n       * });\n       * ```\n       *\n       * ## Special cases\n       *\n       * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n       * will be ignored.\n       *\n       * This behavior can be used to insert tokens after `before`:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'comment', {\n       *     'comment': Prism.languages.markup.comment,\n       *     // tokens after 'comment'\n       * });\n       * ```\n       *\n       * ## Limitations\n       *\n       * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n       * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n       * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n       * deleting properties which is necessary to insert at arbitrary positions.\n       *\n       * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n       * Instead, it will create a new object and replace all references to the target object with the new one. This\n       * can be done without temporarily deleting properties, so the iteration order is well-defined.\n       *\n       * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n       * you hold the target object in a variable, then the value of the variable will not change.\n       *\n       * ```js\n       * var oldMarkup = Prism.languages.markup;\n       * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n       *\n       * assert(oldMarkup !== Prism.languages.markup);\n       * assert(newMarkup === Prism.languages.markup);\n       * ```\n       *\n       * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n       * object to be modified.\n       * @param {string} before The key to insert before.\n       * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n       * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n       * object to be modified.\n       *\n       * Defaults to `Prism.languages`.\n       * @returns {Grammar} The new grammar object.\n       * @public\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root ||\n        /** @type {any} */\n        _.languages;\n        var grammar = root[inside];\n        /** @type {Grammar} */\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            } // Do not insert token which also occur in insert. See #1525\n\n\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n\n        var old = root[inside];\n        root[inside] = ret; // Update references in other language definitions\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            var property = o[i],\n                propertyType = _.util.type(property);\n\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n\n    /**\n     * This is the most high-level function in Prism’s API.\n     * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n     * each one of them.\n     *\n     * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n     *\n     * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n     * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n     * @memberof Prism\n     * @public\n     */\n    highlightAll: function highlightAll(async, callback) {\n      _.highlightAllUnder(document, async, callback);\n    },\n\n    /**\n     * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n     * {@link Prism.highlightElement} on each one of them.\n     *\n     * The following hooks will be run:\n     * 1. `before-highlightall`\n     * 2. `before-all-elements-highlight`\n     * 3. All hooks of {@link Prism.highlightElement} for each element.\n     *\n     * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n     * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n     * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n     * @memberof Prism\n     * @public\n     */\n    highlightAllUnder: function highlightAllUnder(container, async, callback) {\n      var env = {\n        callback: callback,\n        container: container,\n        selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n      };\n\n      _.hooks.run('before-highlightall', env);\n\n      env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n      _.hooks.run('before-all-elements-highlight', env);\n\n      for (var i = 0, element; element = env.elements[i++];) {\n        _.highlightElement(element, async === true, env.callback);\n      }\n    },\n\n    /**\n     * Highlights the code inside a single element.\n     *\n     * The following hooks will be run:\n     * 1. `before-sanity-check`\n     * 2. `before-highlight`\n     * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n     * 4. `before-insert`\n     * 5. `after-highlight`\n     * 6. `complete`\n     *\n     * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n     * the element's language.\n     *\n     * @param {Element} element The element containing the code.\n     * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n     * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n     * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n     * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n     *\n     * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n     * asynchronous highlighting to work. You can build your own bundle on the\n     * [Download page](https://prismjs.com/download.html).\n     * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n     * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n     * @memberof Prism\n     * @public\n     */\n    highlightElement: function highlightElement(element, async, callback) {\n      // Find language\n      var language = _.util.getLanguage(element);\n\n      var grammar = _.languages[language]; // Set language on the element, if not present\n\n      element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language; // Set language on the parent, for styling\n\n      var parent = element.parentElement;\n\n      if (parent && parent.nodeName.toLowerCase() === 'pre') {\n        parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n      }\n\n      var code = element.textContent;\n      var env = {\n        element: element,\n        language: language,\n        grammar: grammar,\n        code: code\n      };\n\n      function insertHighlightedCode(highlightedCode) {\n        env.highlightedCode = highlightedCode;\n\n        _.hooks.run('before-insert', env);\n\n        env.element.innerHTML = env.highlightedCode;\n\n        _.hooks.run('after-highlight', env);\n\n        _.hooks.run('complete', env);\n\n        callback && callback.call(env.element);\n      }\n\n      _.hooks.run('before-sanity-check', env);\n\n      if (!env.code) {\n        _.hooks.run('complete', env);\n\n        callback && callback.call(env.element);\n        return;\n      }\n\n      _.hooks.run('before-highlight', env);\n\n      if (!env.grammar) {\n        insertHighlightedCode(_.util.encode(env.code));\n        return;\n      }\n\n      if (async && _self.Worker) {\n        var worker = new Worker(_.filename);\n\n        worker.onmessage = function (evt) {\n          insertHighlightedCode(evt.data);\n        };\n\n        worker.postMessage(JSON.stringify({\n          language: env.language,\n          code: env.code,\n          immediateClose: true\n        }));\n      } else {\n        insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n      }\n    },\n\n    /**\n     * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n     * and the language definitions to use, and returns a string with the HTML produced.\n     *\n     * The following hooks will be run:\n     * 1. `before-tokenize`\n     * 2. `after-tokenize`\n     * 3. `wrap`: On each {@link Token}.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @param {string} language The name of the language definition passed to `grammar`.\n     * @returns {string} The highlighted HTML.\n     * @memberof Prism\n     * @public\n     * @example\n     * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n     */\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run('before-tokenize', env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run('after-tokenize', env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n\n    /**\n     * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n     * and the language definitions to use, and returns an array with the tokenized code.\n     *\n     * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n     *\n     * This method could be useful in other contexts as well, as a very crude parser.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @returns {TokenStream} An array of strings and tokens, a token stream.\n     * @memberof Prism\n     * @public\n     * @example\n     * let code = `var foo = 0;`;\n     * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n     * tokens.forEach(token => {\n     *     if (token instanceof Prism.Token && token.type === 'number') {\n     *         console.log(`Found numeric literal: ${token.content}`);\n     *     }\n     * });\n     */\n    tokenize: function tokenize(text, grammar) {\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      var tokenList = new LinkedList();\n      addAfter(tokenList, tokenList.head, text);\n      matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n      return toArray(tokenList);\n    },\n\n    /**\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    hooks: {\n      all: {},\n\n      /**\n       * Adds the given callback to the list of callbacks for the given hook.\n       *\n       * The callback will be invoked when the hook it is registered for is run.\n       * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n       *\n       * One callback function can be registered to multiple hooks and the same hook multiple times.\n       *\n       * @param {string} name The name of the hook.\n       * @param {HookCallback} callback The callback function which is given environment variables.\n       * @public\n       */\n      add: function add(name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n\n      /**\n       * Runs a hook invoking all registered callbacks with the given environment variables.\n       *\n       * Callbacks will be invoked synchronously and in the order in which they were registered.\n       *\n       * @param {string} name The name of the hook.\n       * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n       * @public\n       */\n      run: function run(name, env) {\n        var callbacks = _.hooks.all[name];\n\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  };\n  _self.Prism = _; // Typescript note:\n  // The following can be used to import the Token type in JSDoc:\n  //\n  //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n  /**\n   * Creates a new token.\n   *\n   * @param {string} type See {@link Token#type type}\n   * @param {string | TokenStream} content See {@link Token#content content}\n   * @param {string|string[]} [alias] The alias(es) of the token.\n   * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n   * @class\n   * @global\n   * @public\n   */\n\n  function Token(type, content, alias, matchedStr) {\n    /**\n     * The type of the token.\n     *\n     * This is usually the key of a pattern in a {@link Grammar}.\n     *\n     * @type {string}\n     * @see GrammarToken\n     * @public\n     */\n    this.type = type;\n    /**\n     * The strings or tokens contained by this token.\n     *\n     * This will be a token stream if the pattern matched also defined an `inside` grammar.\n     *\n     * @type {string | TokenStream}\n     * @public\n     */\n\n    this.content = content;\n    /**\n     * The alias(es) of the token.\n     *\n     * @type {string|string[]}\n     * @see GrammarToken\n     * @public\n     */\n\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || '').length | 0;\n  }\n  /**\n   * A token stream is an array of strings and {@link Token Token} objects.\n   *\n   * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n   * them.\n   *\n   * 1. No adjacent strings.\n   * 2. No empty strings.\n   *\n   *    The only exception here is the token stream that only contains the empty string and nothing else.\n   *\n   * @typedef {Array<string | Token>} TokenStream\n   * @global\n   * @public\n   */\n\n  /**\n   * Converts the given token or token stream to an HTML representation.\n   *\n   * The following hooks will be run:\n   * 1. `wrap`: On each {@link Token}.\n   *\n   * @param {string | Token | TokenStream} o The token or token stream to be converted.\n   * @param {string} language The name of current language.\n   * @returns {string} The HTML representation of the token or token stream.\n   * @memberof Token\n   * @static\n   */\n\n\n  Token.stringify = function stringify(o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n\n    if (Array.isArray(o)) {\n      var s = '';\n      o.forEach(function (e) {\n        s += stringify(e, language);\n      });\n      return s;\n    }\n\n    var env = {\n      type: o.type,\n      content: stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n    var aliases = o.alias;\n\n    if (aliases) {\n      if (Array.isArray(aliases)) {\n        Array.prototype.push.apply(env.classes, aliases);\n      } else {\n        env.classes.push(aliases);\n      }\n    }\n\n    _.hooks.run('wrap', env);\n\n    var attributes = '';\n\n    for (var name in env.attributes) {\n      attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }\n\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n  };\n  /**\n   * @param {string} text\n   * @param {LinkedList<string | Token>} tokenList\n   * @param {any} grammar\n   * @param {LinkedListNode<string | Token>} startNode\n   * @param {number} startPos\n   * @param {RematchOptions} [rematch]\n   * @returns {void}\n   * @private\n   *\n   * @typedef RematchOptions\n   * @property {string} cause\n   * @property {number} reach\n   */\n\n\n  function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n    for (var token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue;\n      }\n\n      var patterns = grammar[token];\n      patterns = Array.isArray(patterns) ? patterns : [patterns];\n\n      for (var j = 0; j < patterns.length; ++j) {\n        if (rematch && rematch.cause == token + ',' + j) {\n          return;\n        }\n\n        var patternObj = patterns[j],\n            inside = patternObj.inside,\n            lookbehind = !!patternObj.lookbehind,\n            greedy = !!patternObj.greedy,\n            lookbehindLength = 0,\n            alias = patternObj.alias;\n\n        if (greedy && !patternObj.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n          patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n        }\n        /** @type {RegExp} */\n\n\n        var pattern = patternObj.pattern || patternObj;\n\n        for ( // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n          if (rematch && pos >= rematch.reach) {\n            break;\n          }\n\n          var str = currentNode.value;\n\n          if (tokenList.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return;\n          }\n\n          if (str instanceof Token) {\n            continue;\n          }\n\n          var removeCount = 1; // this is the to parameter of removeBetween\n\n          if (greedy && currentNode != tokenList.tail.prev) {\n            pattern.lastIndex = pos;\n            var match = pattern.exec(text);\n\n            if (!match) {\n              break;\n            }\n\n            var from = match.index + (lookbehind && match[1] ? match[1].length : 0);\n            var to = match.index + match[0].length;\n            var p = pos; // find the node that contains the match\n\n            p += currentNode.value.length;\n\n            while (from >= p) {\n              currentNode = currentNode.next;\n              p += currentNode.value.length;\n            } // adjust pos (and p)\n\n\n            p -= currentNode.value.length;\n            pos = p; // the current node is a Token, then the match starts inside another Token, which is invalid\n\n            if (currentNode.value instanceof Token) {\n              continue;\n            } // find the last node which is affected by this match\n\n\n            for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n              removeCount++;\n              p += k.value.length;\n            }\n\n            removeCount--; // replace with the new match\n\n            str = text.slice(pos, p);\n            match.index -= pos;\n          } else {\n            pattern.lastIndex = 0;\n            var match = pattern.exec(str);\n          }\n\n          if (!match) {\n            continue;\n          }\n\n          if (lookbehind) {\n            lookbehindLength = match[1] ? match[1].length : 0;\n          }\n\n          var from = match.index + lookbehindLength,\n              matchStr = match[0].slice(lookbehindLength),\n              to = from + matchStr.length,\n              before = str.slice(0, from),\n              after = str.slice(to);\n          var reach = pos + str.length;\n\n          if (rematch && reach > rematch.reach) {\n            rematch.reach = reach;\n          }\n\n          var removeFrom = currentNode.prev;\n\n          if (before) {\n            removeFrom = addAfter(tokenList, removeFrom, before);\n            pos += before.length;\n          }\n\n          removeRange(tokenList, removeFrom, removeCount);\n          var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n          currentNode = addAfter(tokenList, removeFrom, wrapped);\n\n          if (after) {\n            addAfter(tokenList, currentNode, after);\n          }\n\n          if (removeCount > 1) {\n            // at least one Token object was removed, so we have to do some rematching\n            // this can only happen if the current pattern is greedy\n            matchGrammar(text, tokenList, grammar, currentNode.prev, pos, {\n              cause: token + ',' + j,\n              reach: reach\n            });\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @typedef LinkedListNode\n   * @property {T} value\n   * @property {LinkedListNode<T> | null} prev The previous node.\n   * @property {LinkedListNode<T> | null} next The next node.\n   * @template T\n   * @private\n   */\n\n  /**\n   * @template T\n   * @private\n   */\n\n\n  function LinkedList() {\n    /** @type {LinkedListNode<T>} */\n    var head = {\n      value: null,\n      prev: null,\n      next: null\n    };\n    /** @type {LinkedListNode<T>} */\n\n    var tail = {\n      value: null,\n      prev: head,\n      next: null\n    };\n    head.next = tail;\n    /** @type {LinkedListNode<T>} */\n\n    this.head = head;\n    /** @type {LinkedListNode<T>} */\n\n    this.tail = tail;\n    this.length = 0;\n  }\n  /**\n   * Adds a new node with the given value to the list.\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {T} value\n   * @returns {LinkedListNode<T>} The added node.\n   * @template T\n   */\n\n\n  function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n    var newNode = {\n      value: value,\n      prev: node,\n      next: next\n    };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n    return newNode;\n  }\n  /**\n   * Removes `count` nodes after the given node. The given node will not be removed.\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {number} count\n   * @template T\n   */\n\n\n  function removeRange(list, node, count) {\n    var next = node.next;\n\n    for (var i = 0; i < count && next !== list.tail; i++) {\n      next = next.next;\n    }\n\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n  }\n  /**\n   * @param {LinkedList<T>} list\n   * @returns {T[]}\n   * @template T\n   */\n\n\n  function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n\n    while (node !== list.tail) {\n      array.push(node.value);\n      node = node.next;\n    }\n\n    return array;\n  }\n\n  if (!_self.document) {\n    if (!_self.addEventListener) {\n      // in Node.js\n      return _;\n    }\n\n    if (!_.disableWorkerMessageHandler) {\n      // In worker\n      _self.addEventListener('message', function (evt) {\n        var message = JSON.parse(evt.data),\n            lang = message.language,\n            code = message.code,\n            immediateClose = message.immediateClose;\n\n        _self.postMessage(_.highlight(code, _.languages[lang], lang));\n\n        if (immediateClose) {\n          _self.close();\n        }\n      }, false);\n    }\n\n    return _;\n  } // Get current script and highlight\n\n\n  var script = _.util.currentScript();\n\n  if (script) {\n    _.filename = script.src;\n\n    if (script.hasAttribute('data-manual')) {\n      _.manual = true;\n    }\n  }\n\n  function highlightAutomaticallyCallback() {\n    if (!_.manual) {\n      _.highlightAll();\n    }\n  }\n\n  if (!_.manual) {\n    // If the document state is \"loading\", then we'll use DOMContentLoaded.\n    // If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n    // DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n    // might take longer one animation frame to execute which can create a race condition where only some plugins have\n    // been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n    // See https://github.com/PrismJS/prism/issues/2102\n    var readyState = document.readyState;\n\n    if (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n      document.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n    } else {\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(highlightAutomaticallyCallback);\n      } else {\n        window.setTimeout(highlightAutomaticallyCallback, 16);\n      }\n    }\n  }\n\n  return _;\n}(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = Prism;\n} // hack for components to work correctly in node.js\n\n\nif (typeof global !== 'undefined') {\n  global.Prism = Prism;\n} // some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n*/\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n*/\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */","(function () {\n  if (typeof self === 'undefined' || !self.Prism || !self.document) {\n    return;\n  }\n  /**\n   * Plugin name which is used as a class name for <pre> which is activating the plugin\n   * @type {String}\n   */\n\n\n  var PLUGIN_NAME = 'line-numbers';\n  /**\n   * Regular expression used for determining line breaks\n   * @type {RegExp}\n   */\n\n  var NEW_LINE_EXP = /\\n(?!$)/g;\n  /**\n   * Global exports\n   */\n\n  var config = Prism.plugins.lineNumbers = {\n    /**\n     * Get node for provided line number\n     * @param {Element} element pre element\n     * @param {Number} number line number\n     * @return {Element|undefined}\n     */\n    getLine: function getLine(element, number) {\n      if (element.tagName !== 'PRE' || !element.classList.contains(PLUGIN_NAME)) {\n        return;\n      }\n\n      var lineNumberRows = element.querySelector('.line-numbers-rows');\n      var lineNumberStart = parseInt(element.getAttribute('data-start'), 10) || 1;\n      var lineNumberEnd = lineNumberStart + (lineNumberRows.children.length - 1);\n\n      if (number < lineNumberStart) {\n        number = lineNumberStart;\n      }\n\n      if (number > lineNumberEnd) {\n        number = lineNumberEnd;\n      }\n\n      var lineIndex = number - lineNumberStart;\n      return lineNumberRows.children[lineIndex];\n    },\n\n    /**\n     * Resizes the line numbers of the given element.\n     *\n     * This function will not add line numbers. It will only resize existing ones.\n     * @param {HTMLElement} element A `<pre>` element with line numbers.\n     * @returns {void}\n     */\n    resize: function resize(element) {\n      resizeElements([element]);\n    },\n\n    /**\n     * Whether the plugin can assume that the units font sizes and margins are not depended on the size of\n     * the current viewport.\n     *\n     * Setting this to `true` will allow the plugin to do certain optimizations for better performance.\n     *\n     * Set this to `false` if you use any of the following CSS units: `vh`, `vw`, `vmin`, `vmax`.\n     *\n     * @type {boolean}\n     */\n    assumeViewportIndependence: true\n  };\n  /**\n   * Resizes the given elements.\n   *\n   * @param {HTMLElement[]} elements\n   */\n\n  function resizeElements(elements) {\n    elements = elements.filter(function (e) {\n      var codeStyles = getStyles(e);\n      var whiteSpace = codeStyles['white-space'];\n      return whiteSpace === 'pre-wrap' || whiteSpace === 'pre-line';\n    });\n\n    if (elements.length == 0) {\n      return;\n    }\n\n    var infos = elements.map(function (element) {\n      var codeElement = element.querySelector('code');\n      var lineNumbersWrapper = element.querySelector('.line-numbers-rows');\n\n      if (!codeElement || !lineNumbersWrapper) {\n        return undefined;\n      }\n      /** @type {HTMLElement} */\n\n\n      var lineNumberSizer = element.querySelector('.line-numbers-sizer');\n      var codeLines = codeElement.textContent.split(NEW_LINE_EXP);\n\n      if (!lineNumberSizer) {\n        lineNumberSizer = document.createElement('span');\n        lineNumberSizer.className = 'line-numbers-sizer';\n        codeElement.appendChild(lineNumberSizer);\n      }\n\n      lineNumberSizer.innerHTML = '0';\n      lineNumberSizer.style.display = 'block';\n      var oneLinerHeight = lineNumberSizer.getBoundingClientRect().height;\n      lineNumberSizer.innerHTML = '';\n      return {\n        element: element,\n        lines: codeLines,\n        lineHeights: [],\n        oneLinerHeight: oneLinerHeight,\n        sizer: lineNumberSizer\n      };\n    }).filter(Boolean);\n    infos.forEach(function (info) {\n      var lineNumberSizer = info.sizer;\n      var lines = info.lines;\n      var lineHeights = info.lineHeights;\n      var oneLinerHeight = info.oneLinerHeight;\n      lineHeights[lines.length - 1] = undefined;\n      lines.forEach(function (line, index) {\n        if (line && line.length > 1) {\n          var e = lineNumberSizer.appendChild(document.createElement('span'));\n          e.style.display = 'block';\n          e.textContent = line;\n        } else {\n          lineHeights[index] = oneLinerHeight;\n        }\n      });\n    });\n    infos.forEach(function (info) {\n      var lineNumberSizer = info.sizer;\n      var lineHeights = info.lineHeights;\n      var childIndex = 0;\n\n      for (var i = 0; i < lineHeights.length; i++) {\n        if (lineHeights[i] === undefined) {\n          lineHeights[i] = lineNumberSizer.children[childIndex++].getBoundingClientRect().height;\n        }\n      }\n    });\n    infos.forEach(function (info) {\n      var lineNumberSizer = info.sizer;\n      var wrapper = info.element.querySelector('.line-numbers-rows');\n      lineNumberSizer.style.display = 'none';\n      lineNumberSizer.innerHTML = '';\n      info.lineHeights.forEach(function (height, lineNumber) {\n        wrapper.children[lineNumber].style.height = height + 'px';\n      });\n    });\n  }\n  /**\n   * Returns style declarations for the element\n   * @param {Element} element\n   */\n\n\n  var getStyles = function getStyles(element) {\n    if (!element) {\n      return null;\n    }\n\n    return window.getComputedStyle ? getComputedStyle(element) : element.currentStyle || null;\n  };\n\n  var lastWidth = undefined;\n  window.addEventListener('resize', function () {\n    if (config.assumeViewportIndependence && lastWidth === window.innerWidth) {\n      return;\n    }\n\n    lastWidth = window.innerWidth;\n    resizeElements(Array.prototype.slice.call(document.querySelectorAll('pre.' + PLUGIN_NAME)));\n  });\n  Prism.hooks.add('complete', function (env) {\n    if (!env.code) {\n      return;\n    }\n\n    var code =\n    /** @type {Element} */\n    env.element;\n    var pre =\n    /** @type {HTMLElement} */\n    code.parentNode; // works only for <code> wrapped inside <pre> (not inline)\n\n    if (!pre || !/pre/i.test(pre.nodeName)) {\n      return;\n    } // Abort if line numbers already exists\n\n\n    if (code.querySelector('.line-numbers-rows')) {\n      return;\n    } // only add line numbers if <code> or one of its ancestors has the `line-numbers` class\n\n\n    if (!Prism.util.isActive(code, PLUGIN_NAME)) {\n      return;\n    } // Remove the class 'line-numbers' from the <code>\n\n\n    code.classList.remove(PLUGIN_NAME); // Add the class 'line-numbers' to the <pre>\n\n    pre.classList.add(PLUGIN_NAME);\n    var match = env.code.match(NEW_LINE_EXP);\n    var linesNum = match ? match.length + 1 : 1;\n    var lineNumbersWrapper;\n    var lines = new Array(linesNum + 1).join('<span></span>');\n    lineNumbersWrapper = document.createElement('span');\n    lineNumbersWrapper.setAttribute('aria-hidden', 'true');\n    lineNumbersWrapper.className = 'line-numbers-rows';\n    lineNumbersWrapper.innerHTML = lines;\n\n    if (pre.hasAttribute('data-start')) {\n      pre.style.counterReset = 'linenumber ' + (parseInt(pre.getAttribute('data-start'), 10) - 1);\n    }\n\n    env.element.appendChild(lineNumbersWrapper);\n    resizeElements([pre]);\n    Prism.hooks.run('line-numbers', env);\n  });\n  Prism.hooks.add('line-numbers', function (env) {\n    env.plugins = env.plugins || {};\n    env.plugins.lineNumbers = true;\n  });\n})();","Prism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport Typed from \"typed.js\";\nimport DiffMatchPatch from \"diff-match-patch\";\nimport Prism from \"prismjs\";\nimport \"prismjs/themes/prism-tomorrow.css\";\n\n\nconst diff          = new DiffMatchPatch();\nconst invisibleChar = '\\u2800';\n\nfunction CodeContainer() {\n  const [index, setIndex] = React.useState(0);\n  const strings = [\n    `function foo(x) {\n  return x + 1;\n}`,\n    `function bar(self, y) {\n  return y + 1 * 2;\n}`,\n  ]\n\n  function handleClick() {\n    index === strings.length - 1 ?\n      setIndex(0) :\n      setIndex(index + 1)\n  }\n\n  return (\n    <div style={{ color: 'white', padding: '50px' }}>\n\n      <button\n        onClick={handleClick}\n        style={{ margin: '50px' }}>\n        Cycle\n      </button>\n\n      <Code\n        code      = {strings[index]}\n        language  = {'language-js'}\n        typeSpeed = {50}\n        backSpeed = {50}\n        spacing   = {50}\n      />\n\n    </div>\n  )\n}\n\nfunction Code(props) {\n\n  // PROPS\n  //  props.code      - the code after changes are made\n  //  props.language  - the language to highlight with\n  //  props.typeSpeed - how many ms to type each character\n  //  props.backSpeed - how many ms to perform a backspace\n  //  props.spacing   - how long to pause in between <Typer /> components\n\n  const [prev, setPrev] = useState('');\n  const [curr, setCurr] = useState(props.code);\n\n  const differences  = diff.diff_main(prev, curr);\n  const typerOptions = getTyperOptions();\n\n  useEffect(() => {\n    Prism.highlightAll()\n  });\n\n  useEffect(() => {\n    setPrev(curr);\n    setCurr(props.code);\n  }, [props.code]);\n\n  function getTyperOptions() {\n    let offset = 0;\n    const typeSpeed = props.typeSpeed || 0;\n    const backSpeed = props.backSpeed || 0;\n    const spacing   = props.spacing   || 0;\n\n    return differences.map((e) => {\n      let delay;\n      let options;\n      const [type, content] = e;\n      switch (type) {\n        case  0 : {\n          delay = 0\n          options = {\n            typeSpeed  : 0,\n            backSpeed  : 0,\n            startDelay : 0,\n            backDelay  : 0,\n          }\n          offset += delay + spacing\n          break;\n        }\n        case  1 : {\n          delay = content.length * typeSpeed\n          options = {\n            typeSpeed  : typeSpeed,\n            backSpeed  : 0,\n            startDelay : offset,\n            backDelay  : 0,\n          }\n          offset += delay + spacing\n          break;\n        }\n        case -1 : {\n          delay = content.length * backSpeed\n          options = {\n            typeSpeed  : 0,\n            backSpeed  : backSpeed,\n            startDelay : 0,\n            backDelay  : offset,\n          }\n          offset += delay + spacing\n          break;\n        }\n        default : {\n          // TODO: Raise an error here\n          options = {\n            typeSpeed  : 0,\n            backSpeed  : 0,\n            startDelay : 0,\n            backDelay  : 0,\n          }\n          break;\n        }\n      }\n      return options;\n    })\n  }\n\n  return (\n    <div>\n      <h4 style={{ color: 'white' }}>Animation</h4>\n      <pre >\n      {\n        differences.map((e, index) => {\n          const [type, content] = e;\n          return (\n            <Typer\n              {...typerOptions[index]}\n              code      = {content}\n              operation = {type}\n              language  = {props.language}\n              key       = {index}\n            >\n            </Typer>\n          )\n        })\n      }\n    </pre>\n    </div>\n  );\n\n}\n\nfunction Typer({code, operation, language, typeSpeed, backSpeed, startDelay, backDelay}) {\n\n  // PROPS\n  //  code       - the code to be typed\n  //  operation  - 0: just display code, 1: insert code, -1: remove code\n  //  typeSpeed  - how many ms to type each character\n  //  backSpeed  - how many ms to perform a backspace\n  //  startDelay – how long to wait in ms before typing\n  //  backDelay  – how long to wait in ms before deleting\n\n  const codeRef = useRef(null)\n\n  function getStrings() {\n    switch (operation) {\n      case  0 : {\n        return  [`\\`${code}\\``]\n      }\n      case -1 : {\n        return  [`\\`${code}\\``, \"``\"]\n     }\n      case  1 : {\n        // This is a hack to get around the fact that typed.js automatically\n        // trims all strings\n        const trimmedCode = code.trimStart();\n        const padding     = invisibleChar.repeat(code.length - trimmedCode.length);\n        return [`\\`\\``, padding + trimmedCode];\n      }\n      default : return [];\n    }\n  }\n\n  React.useEffect(() => {\n    const options = {\n      typeSpeed      : typeSpeed  || 0,\n      backSpeed      : backSpeed  || 0,\n      startDelay     : startDelay || 0,\n      backDelay      : backDelay  || 0,\n      smartBackspace : true,\n      loop           : false,\n      showCursor     : false,\n      autoInsertCss  : false,\n      strings        : getStrings(),\n      onStringTyped  : (() => {\n        Prism.highlightElement(codeRef.current)\n      })\n    }\n    const typed = new Typed(codeRef.current, options);\n    Prism.highlightAll()\n    return () => {\n      typed.destroy()\n    };\n  })\n\n  return (<>\n    <code\n      ref       = {codeRef}\n      className = {language}\n      style     = {{ display: 'inline' }}\n    >\n    </code>\n  </>)\n\n}\n\n\nexport default CodeContainer;\n","import React from 'react'\nimport Lorem from 'react-lorem-component'\nimport { Link } from 'gatsby'\nimport { IoIosArrowBack } from \"react-icons/all\"\nimport CodeContainer from './code'\nimport styles from '../styles/article.module.css'\n\n\nfunction Header() {\n  return (\n    <div className={styles.header}>\n      <Link to={'/'}>\n        <IoIosArrowBack\n          color={'black'}\n          size={32}\n          style={{\n            'margin': '10px'\n          }}\n        />\n      </Link>\n    </div>\n  );\n}\n\nfunction Section(props) {\n\n  const title = (\n    <h2 className={styles.sectionTitle}>\n      {props.title}\n    </h2>\n  );\n\n  const body = (\n    <Lorem count={2} />\n  );\n\n  return (\n    <div className={styles.section}>\n      {title}\n      {body}\n    </div>\n  )\n}\n\nfunction Article(props) {\n\n  return (\n    <div className={styles.article}>\n\n      <div className={styles.main}>\n        <Header />\n        <div className={styles.body}>\n          <h1 className={styles.title}>\n            {props.title}\n          </h1>\n          <Section title={'Introduction'} />\n        </div>\n      </div>\n\n      <div className={styles.code}>\n        <CodeContainer />\n      </div>\n\n    </div>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default Article;","import React from 'react'\nimport Article from \"../components/article\"\nimport ArticleData from '../../content/articles/solitaire-ai.yaml'\n\nfunction ArticlePage(props) {\n  return (\n    <Article title={ArticleData[0].title} />\n  )\n}\n\nexport default ArticlePage;"],"sourceRoot":""}